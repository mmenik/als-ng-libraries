var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/interfaces/KeyPressInterface.html",[0,0.955,1,1.415]],["body/interfaces/KeyPressInterface.html",[0,1.63,1,2.414,2,0.919,3,0.791,4,0.674,5,3.247,6,3.247,7,0.565,8,1.429,9,4.216,10,1.792,11,2.249,12,1.085,13,0.049,14,1.974,15,0.791,16,0.043,17,0.043]],["title/injectables/KeyService.html",[18,1.239,19,0.955]],["body/injectables/KeyService.html",[2,0.64,3,0.552,4,0.47,7,0.394,8,1.137,10,1.297,11,2.276,12,1.125,13,0.052,15,0.744,16,0.035,17,0.035,18,1.902,19,1.827,20,2.264,21,1.095,22,1.046,23,1.095,24,3.112,25,4.582,26,4.582,27,1.682,28,4.582,29,3.695,30,1.67,31,1.639,32,3.784,33,1.476,34,1.476,35,3.784,36,2.807,37,2.036,38,1.297,39,1.137,40,1.297,41,2.569,42,1.297,43,1.476,44,3.784,45,2.807,46,2.036,47,5.19,48,1.682,49,1.788,50,4.582,51,2.807,52,4.582,53,1.682,54,1.297,55,0.962,56,1.638,57,1.866,58,1.137,59,2.807,60,2.807]],["title/components/KeyboardComponent.html",[61,0.838,62,0.732]],["body/components/KeyboardComponent.html",[1,1.934,2,0.284,3,0.244,4,0.208,7,0.175,8,0.616,10,1.414,11,1.976,12,1.09,13,0.052,14,1.82,15,0.403,16,0.019,17,0.019,19,1.364,21,0.485,22,0.691,23,0.485,24,1.524,27,0.91,29,2.442,30,0.485,31,1.752,33,0.799,34,0.799,38,1.492,39,1.383,40,1.492,41,1.773,42,1.694,43,1.767,46,1.346,48,0.91,53,1.346,54,1.306,55,0.426,57,0.485,58,0.374,61,1.145,62,1.116,63,0.726,64,0.844,65,0.844,66,1.003,67,2.056,68,2.056,69,0.726,70,2.103,71,1.7,72,1.934,73,1.391,74,2.048,75,1.391,76,2.048,77,2.381,78,2.905,79,3.028,80,2.446,81,1.553,82,1.306,83,2.048,84,2.048,85,3.028,86,2.048,87,2.048,88,2.442,89,1.652,90,3.028,91,2.048,92,2.048,93,3.028,94,1.773,95,2.048,96,2.048,97,0.844,98,1.243,99,1.391,100,1.955,101,1.243,102,3.028,103,1.243,104,1.243,105,1.243,106,2.048,107,3.809,108,1.243,109,2.048,110,1.243,111,1.243,112,3.072,113,2.048,114,1.243,115,2.048,116,1.243,117,1.243,118,2.048,119,1.243,120,1.243,121,2.048,122,1.243,123,1.652,124,2.048,125,2.586,126,1.243,127,1.243,128,1.243,129,1.243,130,1.243,131,1.243,132,3.028,133,1.003,134,2.048,135,1.243,136,1.145,137,1.243,138,1.243,139,1.243,140,0.844,141,1.243,142,1.243,143,1.243,144,1.243,145,0.844,146,1.243,147,1.243,148,2.048,149,1.243,150,1.243,151,1.243,152,1.243,153,0.726,154,1.003,155,1.003,156,0.726,157,1.406,158,0.726,159,1.003,160,0.844,161,0.844,162,1.003,163,1.243,164,2.048,165,1.773,166,1.243,167,1.243,168,1.243,169,1.243,170,1.243,171,0.631,172,1.003,173,3.028,174,1.326,175,3.809,176,2.048,177,1.243,178,1.243,179,1.243,180,1.243,181,3.349,182,2.048,183,3.349,184,2.612,185,2.048,186,2.048,187,2.274,188,1.652,189,3.652,190,2.048,191,2.048,192,3.652,193,2.048,194,2.612,195,1.652,196,2.048,197,1.243,198,1.243,199,2.612,200,3.349,201,1.243,202,1.003,203,1.243,204,1.243,205,1.243,206,1.243,207,1.243,208,1.243,209,3.028,210,1.488,211,1.488,212,2.048,213,3.603,214,2.103,215,2.612,216,2.048,217,1.406,218,1.243,219,1.243,220,1.243,221,2.048,222,1.243,223,2.048,224,1.243,225,1.243,226,1.243,227,1.243,228,1.243,229,1.243,230,1.243,231,1.243,232,1.243,233,1.243,234,1.243,235,1.243,236,1.243,237,1.243,238,3.028,239,1.243,240,2.048,241,1.243,242,1.243,243,1.243,244,1.243,245,1.243,246,1.243,247,3.028,248,1.243,249,1.243,250,1.243,251,1.243,252,0.631,253,1.391,254,1.391,255,0.799,256,2.056,257,0.844,258,0.844,259,0.374,260,0.844,261,0.426,262,0.726,263,0.844]],["title/components/KeyboardContainerComponent.html",[61,0.838,259,0.838]],["body/components/KeyboardContainerComponent.html",[2,0.367,3,0.316,4,0.269,7,0.226,8,0.757,10,1.204,12,0.965,13,0.052,15,0.69,16,0.023,17,0.023,19,1.5,21,0.627,22,0.801,23,0.627,24,0.938,27,1.119,30,0.627,31,1.677,33,0.982,34,0.982,38,1.064,39,1.146,40,0.863,42,1.5,43,1.211,48,1.561,49,1.37,54,1.5,55,0.551,56,0.938,57,0.627,58,0.933,61,1.146,62,0.422,63,0.938,64,1.091,65,1.091,67,2.384,68,1.091,69,0.938,70,2.361,71,1.936,72,2.484,73,1.709,75,1.709,77,2.085,81,0.627,94,2.107,97,1.091,99,1.709,100,2.226,133,1.296,156,0.938,157,0.627,161,1.709,171,0.816,174,1.783,187,1.091,211,1.561,252,0.816,253,1.709,254,1.709,255,0.982,256,2.384,257,1.091,258,1.091,259,1.384,260,1.091,261,0.551,262,0.938,263,1.091,264,2.886,265,2.197,266,1.091,267,3.103,268,3.512,269,2.832,270,2.517,271,2.517,272,2.517,273,2.03,274,2.517,275,2.517,276,3.512,277,3.813,278,3.512,279,3.512,280,2.517,281,3.512,282,3.512,283,2.053,284,4.045,285,2.832,286,3.103,287,2.832,288,2.517,289,2.517,290,4.5,291,4.5,292,2.517,293,2.832,294,3.512,295,1.607,296,1.607,297,3.103,298,1.607,299,1.607,300,2.03,301,1.607,302,2.517,303,2.832,304,1.607,305,0.816,306,1.296,307,2.503,308,1.607,309,3.103,310,1.607,311,1.607,312,1.607,313,1.607,314,1.607,315,4.945,316,3.512,317,2.517,318,3.512,319,1.607,320,3.512,321,2.517,322,1.607,323,1.607,324,1.091,325,2.832,326,2.517,327,1.607,328,1.607,329,1.296,330,1.607,331,1.607,332,1.607,333,1.607,334,1.296,335,1.607,336,1.091,337,1.296,338,1.296,339,1.091,340,1.296,341,1.296,342,1.607,343,1.607,344,1.607,345,1.607,346,1.607,347,1.607,348,1.607,349,1.607,350,1.607,351,1.607,352,1.607,353,1.607,354,1.607,355,1.607,356,1.607,357,2.517,358,1.607,359,1.607,360,1.607,361,2.517,362,2.517,363,1.607,364,1.607,365,1.607,366,1.607,367,2.517,368,3.103,369,1.607,370,2.517,371,2.517,372,1.607,373,1.607,374,1.607,375,1.607,376,1.607,377,1.607,378,1.607,379,1.607,380,1.607,381,1.607,382,1.607,383,1.607,384,1.607,385,2.517,386,2.517,387,1.607,388,1.607,389,1.607,390,2.517,391,2.517,392,2.517,393,2.517,394,2.517,395,1.296]],["title/directives/KeyboardDirective.html",[255,1.088,261,0.955]],["body/directives/KeyboardDirective.html",[2,0.62,3,0.534,4,0.455,7,0.381,8,1.112,12,1.114,13,0.052,14,1.983,15,0.728,16,0.034,17,0.034,21,1.06,22,1.031,23,1.06,30,1.06,31,1.742,33,1.444,34,1.444,38,0.931,39,0.816,40,1.443,54,1.621,55,0.931,57,1.06,58,1.265,62,0.713,69,1.585,70,2.16,77,2.219,78,3.645,80,3.391,94,2.858,99,2.513,100,2.639,125,3.451,136,1.265,145,2.858,153,1.585,171,1.379,172,2.19,187,1.844,255,1.642,261,1.742,262,2.16,396,2.19,397,2.581,398,4.21,399,3.395,400,4.21,401,4.21,402,2.716,403,2.29,404,4.73,405,3.701,406,2.716,407,2.716,408,2.716,409,2.716,410,2.716,411,2.716,412,2.716,413,3.701,414,2.19,415,2.19,416,2.19,417,1.585,418,2.716,419,2.716,420,3.701,421,3.701,422,2.716,423,2.716,424,2.716,425,2.716,426,2.716,427,2.716,428,2.716,429,2.716]],["title/components/KeyboardKeyComponent.html",[61,0.838,157,1.088]],["body/components/KeyboardKeyComponent.html",[1,0.747,2,0.336,3,0.289,4,0.246,7,0.206,8,0.705,9,2.945,10,1.663,11,1.623,12,1.119,13,0.052,14,1.93,15,0.461,16,0.021,17,0.027,19,1.454,21,0.574,22,0.763,23,0.574,24,3.132,27,1.043,30,0.574,31,1.745,33,0.916,34,0.916,38,1.004,39,1.17,40,1.004,41,0.998,42,1.146,43,1.519,46,1.623,48,1.815,49,1.142,54,1.4,55,0.504,56,0.858,57,0.574,58,0.442,61,1.098,62,0.386,63,0.858,64,0.998,65,0.998,67,2.269,68,2.269,69,0.858,70,2.272,71,2.154,72,2.403,73,1.593,75,1.593,77,1.73,80,2.269,81,1.706,82,0.574,88,2.696,89,1.893,97,0.998,100,1.37,112,3.14,125,0.998,140,0.998,153,0.858,154,1.186,155,1.186,156,0.858,157,1.749,158,2.989,160,0.998,161,0.998,162,1.186,165,0.998,171,0.747,174,2.074,195,1.893,202,2.945,210,0.654,211,0.654,217,1.142,252,0.747,253,1.593,254,1.593,255,0.916,256,2.269,257,0.998,258,0.998,259,0.442,260,0.998,261,0.504,262,0.858,263,0.998,264,2.989,269,2.696,285,2.696,300,2.362,430,1.186,431,2.347,432,2.347,433,3.652,434,3.343,435,3.343,436,3.343,437,3.343,438,3.343,439,1.951,440,3.343,441,3.343,442,3.893,443,3.343,444,3.343,445,2.928,446,1.471,447,1.471,448,2.928,449,1.471,450,1.471,451,1.471,452,2.347,453,1.471,454,1.471,455,1.471,456,1.471,457,3.343,458,1.471,459,1.471,460,3.343,461,2.347,462,1.471,463,2.347,464,1.471,465,1.471,466,1.471,467,4.085,468,1.471,469,1.471,470,1.471,471,1.471,472,1.471,473,1.471,474,1.471,475,1.471,476,0.998,477,0.998,478,0.747,479,0.747,480,1.471,481,1.471,482,3.343,483,2.347,484,1.471,485,1.471,486,1.471,487,3.893,488,1.471,489,1.471,490,4.243,491,1.471,492,1.471,493,1.471,494,0.858,495,1.471,496,1.471,497,3.343,498,2.928,499,1.471,500,1.471,501,1.471,502,1.471,503,1.471,504,1.471,505,1.471,506,2.347,507,1.487,508,2.347,509,2.347,510,1.471,511,1.471,512,2.347,513,2.347,514,2.347,515,1.471,516,1.471,517,1.471,518,1.471]],["title/interfaces/KeyboardLayout.html",[0,0.955,136,0.838]],["body/interfaces/KeyboardLayout.html",[0,1.444,2,0.527,3,0.454,4,0.387,7,0.324,8,0.994,11,1.872,12,0.527,13,0.052,14,1.739,15,1.022,16,0.03,17,0.03,37,1.469,42,1.636,46,1.715,49,0.901,53,1.469,58,0.994,81,1.905,82,0.901,136,1.494,174,1.678,210,1.872,211,2.121,214,1.929,217,1.809,283,1.959,305,1.678,439,2.253,478,1.173,479,1.173,494,2.459,507,1.678,519,1.173,520,1.173,521,2.86,522,1.569,523,2.459,524,2.459,525,2.86,526,2.86,527,2.86,528,2.459,529,2.459,530,2.244,531,2.86,532,2.244,533,2.244,534,1.929,535,2.244,536,2.244,537,2.244,538,2.244,539,2.244,540,2.244,541,2.244,542,2.244,543,2.62,544,2.244,545,2.244,546,2.244,547,2.244,548,2.244,549,2.244,550,2.244,551,2.244,552,2.244,553,2.244,554,2.244,555,2.244,556,2.244,557,1.569,558,2.244,559,1.569,560,1.569,561,1.569,562,1.863,563,1.863,564,1.863,565,1.863,566,1.349,567,1.929,568,1.929,569,1.929,570,1.349,571,3.501,572,1.569,573,1.569,574,1.929,575,1.929,576,1.349,577,1.569,578,1.569,579,2.244,580,1.569,581,2.666,582,1.863,583,1.569,584,1.863,585,1.863,586,1.863,587,1.863,588,1.863]],["title/interfaces/KeyboardLayouts.html",[0,0.955,136,0.838]],["body/interfaces/KeyboardLayouts.html",[0,1.447,2,0.53,3,0.456,4,0.389,7,0.326,11,1.876,13,0.052,14,1.812,15,1.023,16,0.03,17,0.03,31,0.795,37,1.473,42,1.638,46,1.719,49,0.905,53,1.473,58,0.997,81,1.742,82,1.294,136,1.517,174,1.683,210,1.876,211,2.124,214,1.935,217,1.812,283,1.964,305,1.683,439,2.258,478,1.178,479,1.178,494,2.464,507,1.683,519,1.683,520,1.178,521,2.251,522,1.576,523,2.464,524,2.464,525,2.866,526,2.866,527,2.866,528,2.464,529,2.464,530,2.251,531,2.866,532,2.251,533,2.251,534,1.935,535,2.251,536,2.251,537,2.251,538,2.251,539,2.251,540,2.251,541,2.251,542,2.251,543,2.627,544,2.251,545,2.251,546,2.251,547,2.251,548,2.251,549,2.251,550,2.251,551,2.251,552,2.251,553,2.251,554,2.251,555,2.251,556,2.251,557,1.576,558,2.251,559,1.576,560,1.576,561,1.576,562,1.871,563,1.871,564,1.871,565,1.871,566,1.355,567,1.935,568,1.935,569,1.935,570,1.355,571,3.503,572,1.576,573,1.576,574,1.935,575,1.935,576,1.355,577,1.576,578,1.576,579,2.251,580,1.576,581,2.674,582,1.871,583,1.576,584,1.871,585,1.871,586,1.871,587,1.871,588,1.871,589,2.321]],["title/modules/KeyboardModule.html",[590,1.415,591,1.627]],["body/modules/KeyboardModule.html",[2,0.669,3,0.576,4,0.491,13,0.052,15,0.917,16,0.036,17,0.036,19,1.71,22,0.669,54,1.85,55,1.004,62,1.358,82,1.143,156,1.711,157,2.018,158,1.711,159,2.363,252,1.488,259,1.554,261,1.839,265,1.302,324,1.99,403,2.217,414,2.363,417,1.711,590,1.977,591,3.204,592,1.711,593,3.528,594,2.363,595,3.528,596,2.363,597,2.363,598,2.363,599,2.363,600,3.141,601,2.363,602,2.363,603,2.931,604,3.895,605,3.895,606,2.931,607,2.645,608,1.99,609,3.895,610,2.363,611,3.895,612,1.99,613,3.895,614,3.895,615,2.363,616,3.895,617,2.363]],["title/classes/KeyboardRef.html",[22,0.636,397,1.415]],["body/classes/KeyboardRef.html",[2,0.688,3,0.592,4,0.505,7,0.423,8,1.193,12,1.012,13,0.052,15,0.78,16,0.036,17,0.036,21,1.176,22,1.118,23,1.176,27,1.763,30,1.176,31,1.679,33,1.548,34,2.054,38,1.033,39,0.906,40,1.033,42,1.36,43,1.548,54,1.52,57,1.176,58,1.333,62,1.367,63,1.759,77,2.095,259,1.564,265,1.339,305,1.53,397,2.642,417,1.759,607,2.046,608,2.046,612,2.046,618,4.056,619,2.43,620,4.714,621,4.714,622,4.714,623,3.968,624,4.898,625,4.245,626,3.968,627,3.014,628,3.014,629,3.014,630,3.014,631,3.014,632,3.014,633,3.014,634,3.014,635,3.014]],["title/injectables/KeyboardService.html",[18,1.239,403,1.239]],["body/injectables/KeyboardService.html",[2,0.452,3,0.39,4,0.332,7,0.278,8,0.889,10,1.211,12,0.956,13,0.052,14,1.952,15,0.581,16,0.027,17,0.027,18,1.571,21,0.774,22,0.894,23,0.774,27,1.314,30,0.774,31,1.639,33,1.153,34,1.153,38,1.343,39,1.178,40,1.343,42,1.668,43,0.774,48,1.314,49,1.528,54,1.56,55,0.68,57,0.774,58,0.596,62,0.521,72,1.007,77,2.317,82,0.774,123,4.115,136,0.889,140,1.346,145,2.66,165,1.346,171,1.007,188,1.599,189,3.856,192,3.925,211,2.079,259,1.062,265,0.881,273,2.384,287,1.599,303,1.599,306,1.599,307,2.384,324,1.346,397,2.591,399,3.159,403,1.953,415,1.599,416,1.599,417,1.157,575,2.063,576,2.063,607,1.346,608,1.346,612,1.346,625,3.856,636,1.599,637,2.956,638,3.918,639,2.956,640,3.918,641,3.918,642,2.956,643,1.983,644,4.678,645,1.983,646,2.956,647,1.983,648,1.983,649,1.983,650,2.956,651,1.983,652,4.394,653,1.983,654,1.983,655,2.956,656,1.983,657,1.983,658,1.983,659,1.983,660,2.956,661,2.956,662,1.983,663,2.956,664,1.983,665,1.983,666,1.983,667,1.983,668,1.983,669,2.956,670,1.983,671,1.983,672,1.983,673,1.983,674,1.983,675,1.983,676,1.983,677,1.983,678,1.983,679,1.983,680,1.983,681,3.534,682,4.867,683,4.867,684,4.867,685,3.534,686,3.534,687,4.394,688,3.918,689,3.534,690,3.918,691,3.534,692,3.534,693,1.983]],["title/changelog.html",[694,1.893,695,1.593,696,2.347]],["body/changelog.html",[13,0.044,16,0.044,17,0.044,61,1.462,71,2.124,72,2.469,217,1.633,395,3.375,697,4.185,698,4.185,699,4.864,700,4.864,701,3.375,702,3.375,703,4.185,704,4.185,705,4.185]],["title/coverage.html",[706,3.038]],["body/coverage.html",[0,1.565,1,1.625,4,0.536,5,2.582,6,2.582,12,0.73,13,0.051,16,0.038,17,0.038,18,1.834,19,1.097,20,2.582,22,0.73,37,1.834,49,1.249,61,1.373,62,0.841,66,2.582,136,1.373,157,1.249,158,1.869,210,2.402,255,1.249,259,0.962,261,1.097,264,2.816,265,2.03,266,3.101,336,2.174,339,2.174,396,2.582,397,1.625,403,1.423,430,2.582,476,2.174,477,2.174,478,1.625,479,1.625,519,2.675,520,2.675,528,1.869,529,1.869,566,1.869,618,2.582,619,2.582,636,2.582,706,2.582,707,3.201,708,3.201,709,3.201,710,3.201,711,3.201,712,3.201,713,3.201,714,3.471,715,5.325,716,3.201,717,3.201,718,3.201,719,3.201,720,3.201,721,3.201,722,3.201,723,3.201,724,3.201,725,3.201,726,3.201,727,3.201]],["title/dependencies.html",[592,1.951,728,2.347]],["body/dependencies.html",[13,0.052,16,0.042,17,0.042,55,1.295,56,2.205,82,1.474,153,2.205,329,3.047,592,2.205,610,3.047,615,3.047,617,3.047,729,5.479,730,3.778,731,4.577,732,3.778,733,4.577,734,3.778,735,3.778,736,4.577,737,3.691,738,3.778,739,3.778,740,3.778,741,3.778,742,3.778,743,3.778,744,3.778,745,3.778,746,3.778,747,3.778,748,3.778,749,3.778]],["title/miscellaneous/enumerations.html",[750,1.043,751,2.696]],["body/miscellaneous/enumerations.html",[7,0.509,10,1.918,13,0.046,16,0.041,17,0.041,43,1.886,53,1.983,160,3.03,283,2.265,293,3.598,325,4.069,334,3.598,507,2.265,567,2.605,568,2.605,569,2.605,570,2.605,574,2.605,750,1.61,751,2.922,752,3.283,753,4.462,754,4.462,755,4.462,756,4.835,757,5.046,758,4.835,759,3.623,760,3.623,761,4.462,762,4.462,763,4.462]],["title/miscellaneous/functions.html",[37,1.485,750,1.043]],["body/miscellaneous/functions.html",[7,0.574,13,0.048,16,0.044,17,0.044,37,1.817,38,1.644,39,1.442,40,1.644,81,1.872,476,3.257,477,3.257,519,2.075,520,2.585,580,2.776,583,2.776,750,1.817,752,3.257,764,4.798]],["title/index.html",[7,0.329,694,1.893,695,1.593]],["body/index.html",[3,0.731,4,0.622,13,0.041,16,0.041,17,0.041,39,1.117,71,2.301,534,2.169,695,2.523,701,3.655,702,4.334,765,4.532,766,4.532,767,3.716,768,4.532,769,3.716,770,3.716,771,3.716,772,4.89,773,3.716,774,3.716,775,3.716,776,4.532,777,5.09,778,4.532,779,3.716,780,4.532,781,3.716,782,3.716,783,3.716,784,3.716,785,3.716,786,3.716,787,5.09,788,3.716,789,4.532,790,3.716,791,3.716,792,3.716,793,3.716,794,3.716,795,3.716,796,4.532,797,4.532]],["title/modules.html",[590,1.912]],["body/modules.html",[13,0.045,16,0.045,17,0.045,590,2.194,591,2.522,737,3.484,798,4.321,799,4.321,800,4.321]],["title/overview.html",[801,3.038]],["body/overview.html",[0,1.256,13,0.05,15,0.721,16,0.041,17,0.041,18,1.629,19,1.666,22,0.836,61,1.102,62,1.276,157,1.896,217,1.896,252,1.861,255,1.43,259,1.461,261,1.837,403,2.16,523,2.139,524,2.623,590,2.281,591,3.262,592,2.139,593,2.956,594,2.956,595,2.956,596,2.956,597,2.956,598,2.956,599,2.956,600,3.624,601,2.956,602,2.956,801,2.956]],["title/miscellaneous/variables.html",[714,2.269,750,1.043]],["body/miscellaneous/variables.html",[7,0.403,10,1.7,12,1.055,13,0.051,16,0.035,17,0.035,46,1.708,48,2.205,53,1.708,81,1.5,136,1.449,210,1.708,214,2.243,217,1.5,264,1.677,265,1.276,266,2.941,283,2.199,305,1.458,336,2.941,337,2.317,338,2.317,339,2.941,340,2.317,341,2.317,439,2.243,478,2.199,479,2.199,494,2.243,507,1.951,519,1.458,520,2.448,521,2.61,522,1.95,523,2.243,524,2.243,525,2.61,526,2.61,527,2.61,528,2.243,529,2.243,530,1.95,531,2.61,532,1.95,533,1.95,534,1.677,535,1.95,536,1.95,537,1.95,538,1.95,539,1.95,540,1.95,541,1.95,542,1.95,543,1.95,544,1.95,545,1.95,546,1.95,547,1.95,548,1.95,549,1.95,550,1.95,551,1.95,552,1.95,553,1.95,554,1.95,555,1.95,556,1.95,557,1.95,558,1.95,559,1.95,560,1.95,561,1.95,566,2.528,567,2.243,568,2.243,569,2.243,570,1.677,571,3.633,572,1.95,573,1.95,574,2.243,575,2.243,576,1.677,577,1.95,578,1.95,579,2.61,714,1.95,750,1.276,752,3.369,802,4.625]]],"invertedIndex":[["",{"_index":13,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":210,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.8.26",{"_index":749,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":715,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":721,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":720,"title":{},"body":{"coverage.html":{}}}],["06",{"_index":699,"title":{},"body":{"changelog.html":{}}}],["1",{"_index":217,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"changelog.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["1.0.0",{"_index":697,"title":{},"body":{"changelog.html":{}}}],["100",{"_index":722,"title":{},"body":{"coverage.html":{}}}],["2",{"_index":523,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["2.0.8",{"_index":747,"title":{},"body":{"dependencies.html":{}}}],["2.5.4",{"_index":742,"title":{},"body":{"dependencies.html":{}}}],["2/21",{"_index":716,"title":{},"body":{"coverage.html":{}}}],["2/23",{"_index":717,"title":{},"body":{"coverage.html":{}}}],["2/6",{"_index":711,"title":{},"body":{"coverage.html":{}}}],["2/8",{"_index":725,"title":{},"body":{"coverage.html":{}}}],["2/9",{"_index":719,"title":{},"body":{"coverage.html":{}}}],["2018",{"_index":698,"title":{},"body":{"changelog.html":{}}}],["22",{"_index":718,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":724,"title":{},"body":{"coverage.html":{}}}],["26",{"_index":712,"title":{},"body":{"coverage.html":{}}}],["28",{"_index":463,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["3",{"_index":524,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["33",{"_index":710,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":525,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["4.7.0",{"_index":745,"title":{},"body":{"dependencies.html":{}}}],["4/15",{"_index":713,"title":{},"body":{"coverage.html":{}}}],["5",{"_index":526,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["50",{"_index":457,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["6",{"_index":494,"title":{},"body":{"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["6.0.0",{"_index":733,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":729,"title":{},"body":{"dependencies.html":{}}}],["6.2.1",{"_index":731,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":723,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":527,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["8",{"_index":528,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["9",{"_index":529,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["abstractcontrol",{"_index":107,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["accessor",{"_index":140,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{},"injectables/KeyboardService.html":{}}}],["activ",{"_index":433,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["actual_compon",{"_index":263,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["al",{"_index":71,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"changelog.html":{},"index.html":{}}}],["alphanumer",{"_index":522,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["alphanumerickeyboard",{"_index":562,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["alreadi",{"_index":363,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["alskeyboard",{"_index":262,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{}}}],["alt",{"_index":574,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["altgraph",{"_index":761,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["altlk",{"_index":762,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["angl",{"_index":577,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["angular",{"_index":701,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["angular/anim",{"_index":329,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"dependencies.html":{}}}],["angular/cdk",{"_index":730,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk/overlay",{"_index":612,"title":{},"body":{"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["angular/cdk/port",{"_index":324,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"modules/KeyboardModule.html":{},"injectables/KeyboardService.html":{}}}],["angular/common",{"_index":610,"title":{},"body":{"modules/KeyboardModule.html":{},"dependencies.html":{}}}],["angular/compil",{"_index":732,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":55,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{},"injectables/KeyboardService.html":{},"dependencies.html":{}}}],["angular/flex",{"_index":617,"title":{},"body":{"modules/KeyboardModule.html":{},"dependencies.html":{}}}],["angular/form",{"_index":153,"title":{},"body":{"components/KeyboardComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":735,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":615,"title":{},"body":{"modules/KeyboardModule.html":{},"dependencies.html":{}}}],["angular/material/cor",{"_index":332,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["angular/platform",{"_index":736,"title":{},"body":{"dependencies.html":{}}}],["angular/rout",{"_index":739,"title":{},"body":{"dependencies.html":{}}}],["anim",{"_index":325,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["animate(hide_anim",{"_index":347,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["animate(show_anim",{"_index":349,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["animationcurv",{"_index":330,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["animationcurves.acceleration_curv",{"_index":341,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["animationcurves.deceleration_curv",{"_index":338,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["animationdur",{"_index":331,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["animationdurations.ent",{"_index":337,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["animationdurations.exit",{"_index":340,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"miscellaneous/variables.html":{}}}],["animationev",{"_index":297,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["animationst",{"_index":352,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["app",{"_index":766,"title":{},"body":{"index.html":{}}}],["applicazion",{"_index":767,"title":{},"body":{"index.html":{}}}],["argument",{"_index":99,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{}}}],["array",{"_index":521,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["arrow",{"_index":573,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["arrowleft",{"_index":568,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arrowleft:2",{"_index":557,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["arrowright",{"_index":569,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["arrowright:2",{"_index":559,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["artifact",{"_index":791,"title":{},"body":{"index.html":{}}}],["asobserv",{"_index":391,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["attach",{"_index":361,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["attachcomponentport",{"_index":280,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["attachcomponentportal(port",{"_index":302,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["attachcontrol",{"_index":83,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["attachcontrol(control",{"_index":106,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["attachkeyboardcont",{"_index":640,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["attachkeyboardcontain",{"_index":639,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["attachkeyboardcontainer(overlayref",{"_index":646,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["attachtemplateport",{"_index":281,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["automat",{"_index":784,"title":{},"body":{"index.html":{}}}],["awesom",{"_index":744,"title":{},"body":{"dependencies.html":{}}}],["b",{"_index":553,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["backspac",{"_index":567,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["backspace:1",{"_index":530,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["baseportaloutlet",{"_index":268,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["behaviorsubject",{"_index":460,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["behaviorsubject(fals",{"_index":461,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["beta.15",{"_index":734,"title":{},"body":{"dependencies.html":{}}}],["blur",{"_index":400,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["boolean",{"_index":11,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["bootstrap",{"_index":594,"title":{},"body":{"modules/KeyboardModule.html":{},"overview.html":{}}}],["bottom",{"_index":691,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["bottom('10px",{"_index":692,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["break",{"_index":192,"title":{},"body":{"components/KeyboardComponent.html":{},"injectables/KeyboardService.html":{}}}],["brows",{"_index":800,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":737,"title":{},"body":{"dependencies.html":{},"modules.html":{}}}],["bubbl",{"_index":240,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["build",{"_index":787,"title":{},"body":{"index.html":{}}}],["c",{"_index":551,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["callback",{"_index":377,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["cancel",{"_index":241,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["capslock",{"_index":507,"title":{},"body":{"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["caret",{"_index":214,"title":{},"body":{"components/KeyboardComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["case",{"_index":189,"title":{},"body":{"components/KeyboardComponent.html":{},"injectables/KeyboardService.html":{}}}],["caus",{"_index":378,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["cdkportaloutlet",{"_index":320,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["center",{"_index":687,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["centerhorizont",{"_index":688,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["centervert",{"_index":690,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["chang",{"_index":786,"title":{},"body":{"index.html":{}}}],["changedetect",{"_index":270,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["changedetectionstrategi",{"_index":323,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["changedetectionstrategy.onpush",{"_index":271,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["changedetectorref",{"_index":291,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["changelog",{"_index":696,"title":{"changelog.html":{}},"body":{}}],["class",{"_index":22,"title":{"classes/KeyboardRef.html":{}},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"coverage.html":{},"overview.html":{}}}],["classes/keyboard",{"_index":415,"title":{},"body":{"directives/KeyboardDirective.html":{},"injectables/KeyboardService.html":{}}}],["cluster_keyboardmodul",{"_index":596,"title":{},"body":{"modules/KeyboardModule.html":{},"overview.html":{}}}],["cluster_keyboardmodule_declar",{"_index":597,"title":{},"body":{"modules/KeyboardModule.html":{},"overview.html":{}}}],["cluster_keyboardmodule_export",{"_index":598,"title":{},"body":{"modules/KeyboardModule.html":{},"overview.html":{}}}],["cluster_keyboardmodule_provid",{"_index":599,"title":{},"body":{"modules/KeyboardModule.html":{},"overview.html":{}}}],["code",{"_index":244,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["commonmodul",{"_index":609,"title":{},"body":{"modules/KeyboardModule.html":{}}}],["completeexit",{"_index":282,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["compon",{"_index":61,"title":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"changelog.html":{},"coverage.html":{},"overview.html":{}}}],["component'},{'nam",{"_index":258,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["component_templ",{"_index":257,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["componentport",{"_index":303,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"injectables/KeyboardService.html":{}}}],["componentportal(keyboardcompon",{"_index":672,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["componentportal(keyboardcontainercompon",{"_index":677,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["componentref",{"_index":307,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"injectables/KeyboardService.html":{}}}],["components/keyboard",{"_index":607,"title":{},"body":{"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["components/keyboard/keyboard.compon",{"_index":417,"title":{},"body":{"directives/KeyboardDirective.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["console.log('key",{"_index":201,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["console.log('keydown",{"_index":180,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["const",{"_index":211,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"injectables/KeyboardService.html":{}}}],["constructor",{"_index":30,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["constructor(elementref",{"_index":402,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["constructor(inst",{"_index":623,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["constructor(keyservic",{"_index":97,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["constructor(overlay",{"_index":643,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["constructor(priv",{"_index":171,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"injectables/KeyboardService.html":{}}}],["contain",{"_index":273,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"injectables/KeyboardService.html":{}}}],["container'},{'nam",{"_index":260,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["container.attachcomponentportal(port",{"_index":674,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["container.compon",{"_index":608,"title":{},"body":{"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["container.component.html",{"_index":275,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.scss",{"_index":274,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.t",{"_index":266,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["container.component.ts:104",{"_index":311,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:111",{"_index":312,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:116",{"_index":310,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:132",{"_index":313,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:42",{"_index":314,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:45",{"_index":322,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:48",{"_index":295,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:51",{"_index":319,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:53",{"_index":292,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:69",{"_index":301,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:73",{"_index":308,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:77",{"_index":304,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container.component.ts:85",{"_index":298,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["container/keyboard",{"_index":265,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["containerinst",{"_index":624,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["containerint",{"_index":620,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["containerport",{"_index":676,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["containerref",{"_index":678,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["containerref.inst",{"_index":680,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["content",{"_index":362,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["contentref",{"_index":673,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["control",{"_index":78,"title":{},"body":{"components/KeyboardComponent.html":{},"directives/KeyboardDirective.html":{}}}],["core",{"_index":740,"title":{},"body":{"dependencies.html":{}}}],["coverag",{"_index":706,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":33,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["createoverlay",{"_index":641,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["cssclass",{"_index":434,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["current",{"_index":212,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["current.length",{"_index":215,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["current.slice(0",{"_index":216,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["current.slice(caret",{"_index":218,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["current.slice(caret)].join",{"_index":228,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["current.substring(0",{"_index":220,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["current}${valu",{"_index":229,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["d",{"_index":541,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["dark",{"_index":169,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["darkthem",{"_index":79,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["declar",{"_index":593,"title":{},"body":{"modules/KeyboardModule.html":{},"overview.html":{}}}],["decor",{"_index":133,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{}}}],["default",{"_index":48,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"injectables/KeyboardService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":31,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayouts.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["dell",{"_index":773,"title":{},"body":{"index.html":{}}}],["demo",{"_index":765,"title":{},"body":{"index.html":{}}}],["depend",{"_index":592,"title":{"dependencies.html":{}},"body":{"modules/KeyboardModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":21,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["destroy",{"_index":276,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["dev",{"_index":781,"title":{},"body":{"index.html":{}}}],["develop",{"_index":775,"title":{},"body":{"index.html":{}}}],["direct",{"_index":255,"title":{"directives/KeyboardDirective.html":{}},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"coverage.html":{},"overview.html":{}}}],["directives/keyboard.direct",{"_index":606,"title":{},"body":{"modules/KeyboardModule.html":{}}}],["directori",{"_index":794,"title":{},"body":{"index.html":{}}}],["dismiss",{"_index":621,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["dispatchev",{"_index":84,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["dispatchevents(ev",{"_index":109,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["dist",{"_index":793,"title":{},"body":{"index.html":{}}}],["document",{"_index":707,"title":{},"body":{"coverage.html":{}}}],["document:keydown",{"_index":95,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["document:keydown(ev",{"_index":101,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["document:keyup",{"_index":96,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["document:keyup(ev",{"_index":104,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["dom",{"_index":64,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["dynam",{"_index":738,"title":{},"body":{"dependencies.html":{}}}],["e",{"_index":534,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["element",{"_index":254,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["elementref",{"_index":125,"title":{},"body":{"components/KeyboardComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{}}}],["embeddedviewref",{"_index":309,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["end",{"_index":797,"title":{},"body":{"index.html":{}}}],["enter",{"_index":283,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["enter:2",{"_index":561,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["enter:2.5",{"_index":556,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["entrycompon",{"_index":604,"title":{},"body":{"modules/KeyboardModule.html":{}}}],["enumer",{"_index":751,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/keyboard",{"_index":161,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["error('attempt",{"_index":360,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["error('not",{"_index":358,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["event",{"_index":100,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{}}}],["event('input",{"_index":250,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["event.key",{"_index":181,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["event.preventdefault",{"_index":356,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["event.valu",{"_index":243,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["eventemitt",{"_index":448,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["eventinit",{"_index":238,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["exampl",{"_index":23,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["exit",{"_index":284,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["export",{"_index":15,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"overview.html":{}}}],["extend",{"_index":267,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["f",{"_index":542,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["fa",{"_index":571,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["fals",{"_index":174,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["file",{"_index":4,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"coverage.html":{},"index.html":{}}}],["finish",{"_index":317,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["finishdismiss",{"_index":622,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["first",{"_index":395,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"changelog.html":{}}}],["fix",{"_index":483,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["fix}px",{"_index":505,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["flex",{"_index":435,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["flexlayoutmodul",{"_index":616,"title":{},"body":{"modules/KeyboardModule.html":{}}}],["focu",{"_index":401,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["font",{"_index":743,"title":{},"body":{"dependencies.html":{}}}],["foreach((key",{"_index":185,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["formcontrol",{"_index":475,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["fromstat",{"_index":367,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["function",{"_index":37,"title":{"miscellaneous/functions.html":{}},"body":{"injectables/KeyService.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["g",{"_index":543,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["get",{"_index":694,"title":{"changelog.html":{},"index.html":{}},"body":{}}],["getcursorposit",{"_index":85,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["getinputvalu",{"_index":149,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["getkeyboardlayout",{"_index":141,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["getopenedkeyboardref",{"_index":656,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["global",{"_index":684,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["h",{"_index":544,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["hammerj",{"_index":746,"title":{},"body":{"dependencies.html":{}}}],["handlenormalkey",{"_index":86,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["handlenormalkey(valu",{"_index":113,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["handlespecialkey",{"_index":87,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["handlespecialkey(valu",{"_index":115,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["height",{"_index":436,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["hidden",{"_index":758,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hide",{"_index":759,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["hide_anim",{"_index":339,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["hidekeyboard",{"_index":428,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["hostbind",{"_index":286,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["hostbinding('@st",{"_index":351,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["hostlisten",{"_index":94,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{}}}],["hostlistener('@state.don",{"_index":365,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["hostlistener('blur",{"_index":427,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["hostlistener('document:keydown",{"_index":178,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["hostlistener('document:keyup",{"_index":197,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["hostlistener('focu",{"_index":418,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["hostlistener('mousedown",{"_index":354,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["html",{"_index":253,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["http://localhost:4200",{"_index":783,"title":{},"body":{"index.html":{}}}],["icon",{"_index":437,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["identifi",{"_index":708,"title":{},"body":{"coverage.html":{}}}],["il",{"_index":771,"title":{},"body":{"index.html":{}}}],["implement",{"_index":67,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["import",{"_index":54,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["inaugur",{"_index":703,"title":{},"body":{"changelog.html":{}}}],["includ",{"_index":704,"title":{},"body":{"changelog.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["inject",{"_index":18,"title":{"injectables/KeyService.html":{},"injectables/KeyboardService.html":{}},"body":{"injectables/KeyService.html":{},"injectables/KeyboardService.html":{},"coverage.html":{},"overview.html":{}}}],["input",{"_index":80,"title":{},"body":{"components/KeyboardComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{}}}],["inputvalu",{"_index":148,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["inputvalue(valu",{"_index":231,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["insid",{"_index":375,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["instanc",{"_index":34,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["interfac",{"_index":0,"title":{"interfaces/KeyPressInterface.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}},"body":{"interfaces/KeyPressInterface.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"coverage.html":{},"overview.html":{}}}],["interfaces/key",{"_index":154,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["isspac",{"_index":476,"title":{},"body":{"components/KeyboardKeyComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isspacer(key",{"_index":580,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/functions.html":{}}}],["isspacer(this.key",{"_index":486,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["isspeci",{"_index":477,"title":{},"body":{"components/KeyboardKeyComponent.html":{},"coverage.html":{},"miscellaneous/functions.html":{}}}],["isspecial(key",{"_index":583,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/functions.html":{}}}],["isspecial(this.key",{"_index":488,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["j",{"_index":545,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["join",{"_index":219,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["js",{"_index":741,"title":{},"body":{"dependencies.html":{}}}],["k",{"_index":546,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["key",{"_index":81,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["key${event.value.touppercas",{"_index":245,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["key.compon",{"_index":159,"title":{},"body":{"components/KeyboardComponent.html":{},"modules/KeyboardModule.html":{}}}],["key.component.html",{"_index":432,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.scss",{"_index":431,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.t",{"_index":430,"title":{},"body":{"components/KeyboardKeyComponent.html":{},"coverage.html":{}}}],["key.component.ts:111",{"_index":453,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:118",{"_index":450,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:23",{"_index":447,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:24",{"_index":449,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:26",{"_index":468,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:27",{"_index":469,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:29",{"_index":471,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:30",{"_index":456,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:31",{"_index":465,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:32",{"_index":466,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:33",{"_index":459,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:34",{"_index":470,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:35",{"_index":455,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:36",{"_index":454,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:38",{"_index":472,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:39",{"_index":458,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:40",{"_index":464,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:42",{"_index":462,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:44",{"_index":474,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:46",{"_index":446,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.component.ts:55",{"_index":451,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["key.enum",{"_index":162,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["key.enum.t",{"_index":755,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["key.length",{"_index":581,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["key.press",{"_index":186,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["key.speci",{"_index":203,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["key.valu",{"_index":183,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["key/keyboard",{"_index":158,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{},"coverage.html":{}}}],["keyboard",{"_index":72,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"injectables/KeyboardService.html":{},"changelog.html":{}}}],["keyboard.component.html",{"_index":76,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboard.component.scss",{"_index":74,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardanimationst",{"_index":293,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["keyboardanimationstate.hidden",{"_index":388,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["keyboardanimationstate.vis",{"_index":371,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["keyboardanimationstate.void",{"_index":294,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["keyboardanimationtransit",{"_index":334,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"miscellaneous/enumerations.html":{}}}],["keyboardcompon",{"_index":62,"title":{"components/KeyboardComponent.html":{}},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"coverage.html":{},"overview.html":{}}}],["keyboardcontainercompon",{"_index":259,"title":{"components/KeyboardContainerComponent.html":{}},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"coverage.html":{},"overview.html":{}}}],["keyboarddirect",{"_index":261,"title":{"directives/KeyboardDirective.html":{}},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{},"coverage.html":{},"overview.html":{}}}],["keyboarden",{"_index":398,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["keyboardev",{"_index":102,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardevent('keydown",{"_index":248,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardevent('keypress",{"_index":249,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardevent('keyup",{"_index":251,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardeventinit",{"_index":239,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardkey",{"_index":160,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{},"miscellaneous/enumerations.html":{}}}],["keyboardkey.alt",{"_index":225,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardkey.altgraph",{"_index":226,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardkey.altlk",{"_index":227,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardkey.arrowleft",{"_index":224,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardkey.arrowright",{"_index":222,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardkey.backspac",{"_index":208,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardkey.capslock",{"_index":195,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["keyboardkey.ent",{"_index":190,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardkey.shift",{"_index":193,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardkey.spac",{"_index":184,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardkeycompon",{"_index":157,"title":{"components/KeyboardKeyComponent.html":{}},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{},"coverage.html":{},"overview.html":{}}}],["keyboardlayout",{"_index":136,"title":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}},"body":{"components/KeyboardComponent.html":{},"directives/KeyboardDirective.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"injectables/KeyboardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["keyboardlayout(valu",{"_index":166,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboardlayouts[keyboardlayout",{"_index":666,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["keyboardmodul",{"_index":591,"title":{"modules/KeyboardModule.html":{}},"body":{"modules/KeyboardModule.html":{},"modules.html":{},"overview.html":{}}}],["keyboardposit",{"_index":399,"title":{},"body":{"directives/KeyboardDirective.html":{},"injectables/KeyboardService.html":{}}}],["keyboardref",{"_index":397,"title":{"classes/KeyboardRef.html":{}},"body":{"directives/KeyboardDirective.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"coverage.html":{}}}],["keyboardref(contentref.inst",{"_index":675,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["keyboardref.containerintance.ent",{"_index":668,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["keyboardref.instance.keyboardlayout",{"_index":665,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["keyboardref.instance.keyboardthem",{"_index":667,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["keyboardrefatthislevel",{"_index":638,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["keyboardservic",{"_index":403,"title":{"injectables/KeyboardService.html":{}},"body":{"directives/KeyboardDirective.html":{},"modules/KeyboardModule.html":{},"injectables/KeyboardService.html":{},"coverage.html":{},"overview.html":{}}}],["keyboardthem",{"_index":145,"title":{},"body":{"components/KeyboardComponent.html":{},"directives/KeyboardDirective.html":{},"injectables/KeyboardService.html":{}}}],["keyboardtheme(valu",{"_index":167,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["keyboeardservic",{"_index":637,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["keypress",{"_index":445,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["keypressinterfac",{"_index":1,"title":{"interfaces/KeyPressInterface.html":{}},"body":{"interfaces/KeyPressInterface.html":{},"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{},"coverage.html":{}}}],["keyservic",{"_index":19,"title":{"injectables/KeyService.html":{}},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{},"coverage.html":{},"overview.html":{}}}],["l",{"_index":547,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["layout",{"_index":82,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"modules/KeyboardModule.html":{},"injectables/KeyboardService.html":{},"dependencies.html":{}}}],["layout.t",{"_index":520,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["layout.ts:17",{"_index":589,"title":{},"body":{"interfaces/KeyboardLayouts.html":{}}}],["leak",{"_index":380,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["left",{"_index":575,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"injectables/KeyboardService.html":{},"miscellaneous/variables.html":{}}}],["left('10px",{"_index":685,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["left:2",{"_index":563,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["legend",{"_index":252,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{},"overview.html":{}}}],["length",{"_index":588,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["lib:[nam",{"_index":790,"title":{},"body":{"index.html":{}}}],["librari",{"_index":702,"title":{},"body":{"changelog.html":{},"index.html":{}}}],["libreri",{"_index":774,"title":{},"body":{"index.html":{}}}],["lo",{"_index":769,"title":{},"body":{"index.html":{}}}],["locat",{"_index":246,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["lock",{"_index":46,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["lockchang",{"_index":25,"title":{},"body":{"injectables/KeyService.html":{}}}],["long",{"_index":572,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["m",{"_index":555,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["matbuttonmodul",{"_index":614,"title":{},"body":{"modules/KeyboardModule.html":{}}}],["match",{"_index":17,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["matches[1",{"_index":491,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["matches[3",{"_index":492,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["memberof",{"_index":57,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["memori",{"_index":379,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["metadata",{"_index":69,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{}}}],["method",{"_index":27,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["miscellan",{"_index":750,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["modul",{"_index":590,"title":{"modules/KeyboardModule.html":{},"modules.html":{}},"body":{"modules/KeyboardModule.html":{},"modules.html":{},"overview.html":{}}}],["mousedown",{"_index":289,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["mousedown(ev",{"_index":299,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["mouseev",{"_index":300,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["multipli",{"_index":482,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["n",{"_index":554,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["name",{"_index":39,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"miscellaneous/functions.html":{},"index.html":{}}}],["navig",{"_index":782,"title":{},"body":{"index.html":{}}}],["new",{"_index":49,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"injectables/KeyboardService.html":{},"coverage.html":{}}}],["ng",{"_index":778,"title":{},"body":{"index.html":{}}}],["ngcontrol",{"_index":404,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["ngmodul",{"_index":605,"title":{},"body":{"modules/KeyboardModule.html":{}}}],["ngondestroy",{"_index":285,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["ngoninit",{"_index":88,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["ngzone",{"_index":290,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["note",{"_index":372,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["notifi",{"_index":316,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["null",{"_index":652,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["number",{"_index":112,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["numer",{"_index":560,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["numerickeyboard",{"_index":565,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["o",{"_index":538,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":802,"title":{},"body":{"miscellaneous/variables.html":{}}}],["observ",{"_index":52,"title":{},"body":{"injectables/KeyService.html":{}}}],["onanimationend(ev",{"_index":366,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["ondestroy",{"_index":269,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["onent",{"_index":277,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["onenter.complet",{"_index":384,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["onenter.next",{"_index":383,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["onexit",{"_index":278,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["oninit",{"_index":68,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["onkeydown(ev",{"_index":179,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["onkeypress",{"_index":89,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["onkeypress(ev",{"_index":452,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["onkeypress(key",{"_index":118,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["onkeyup(ev",{"_index":198,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["onmousedown(ev",{"_index":355,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["open",{"_index":642,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["open(keyboardlayout",{"_index":650,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["openedkeyboardref",{"_index":655,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["openedkeyboardref(valu",{"_index":662,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["option",{"_index":40,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"miscellaneous/functions.html":{}}}],["out",{"_index":602,"title":{},"body":{"modules/KeyboardModule.html":{},"overview.html":{}}}],["output",{"_index":444,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["overlay",{"_index":644,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["overlayconfig",{"_index":660,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["overlaymodul",{"_index":611,"title":{},"body":{"modules/KeyboardModule.html":{}}}],["overlayref",{"_index":625,"title":{},"body":{"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["overlayref.attach(containerport",{"_index":679,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["overview",{"_index":801,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["p",{"_index":539,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["packag",{"_index":728,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":58,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["paramet",{"_index":38,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"miscellaneous/functions.html":{}}}],["parsefloat(matches[3",{"_index":493,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["pattern",{"_index":585,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["pattern.test(key",{"_index":587,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["per",{"_index":768,"title":{},"body":{"index.html":{}}}],["portal",{"_index":306,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"injectables/KeyboardService.html":{}}}],["portalmodul",{"_index":613,"title":{},"body":{"modules/KeyboardModule.html":{}}}],["portaloutlet",{"_index":279,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["posit",{"_index":123,"title":{},"body":{"components/KeyboardComponent.html":{},"injectables/KeyboardService.html":{}}}],["preservewhitespac",{"_index":272,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["press",{"_index":202,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["press.interfac",{"_index":155,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["press.interface.t",{"_index":6,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"coverage.html":{}}}],["pressed(valu",{"_index":480,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["pressent",{"_index":90,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["privat",{"_index":77,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["prod",{"_index":788,"title":{},"body":{"index.html":{}}}],["project",{"_index":789,"title":{},"body":{"index.html":{}}}],["projects/.../keyboard",{"_index":752,"title":{},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/keyboard/src/lib/classes/keyboard",{"_index":618,"title":{},"body":{"classes/KeyboardRef.html":{},"coverage.html":{}}}],["projects/keyboard/src/lib/components/keyboard",{"_index":264,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.t",{"_index":66,"title":{},"body":{"components/KeyboardComponent.html":{},"coverage.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:109",{"_index":116,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:158",{"_index":114,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:175",{"_index":150,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:181",{"_index":152,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:187",{"_index":111,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:195",{"_index":122,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:205",{"_index":127,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:210",{"_index":128,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:22",{"_index":129,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:222",{"_index":120,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:226",{"_index":110,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:23",{"_index":131,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:24",{"_index":137,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:25",{"_index":130,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:27",{"_index":138,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:28",{"_index":139,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:31",{"_index":135,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:33",{"_index":142,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:37",{"_index":144,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:41",{"_index":147,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:43",{"_index":98,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:52",{"_index":117,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:60",{"_index":103,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:83",{"_index":105,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:91",{"_index":108,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:95",{"_index":126,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:99",{"_index":119,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["projects/keyboard/src/lib/directives/keyboard.directive.t",{"_index":396,"title":{},"body":{"directives/KeyboardDirective.html":{},"coverage.html":{}}}],["projects/keyboard/src/lib/directives/keyboard.directive.ts:17",{"_index":412,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["projects/keyboard/src/lib/directives/keyboard.directive.ts:19",{"_index":407,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["projects/keyboard/src/lib/directives/keyboard.directive.ts:20",{"_index":409,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["projects/keyboard/src/lib/directives/keyboard.directive.ts:21",{"_index":408,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["projects/keyboard/src/lib/directives/keyboard.directive.ts:22",{"_index":405,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["projects/keyboard/src/lib/directives/keyboard.directive.ts:36",{"_index":411,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["projects/keyboard/src/lib/directives/keyboard.directive.ts:45",{"_index":410,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["projects/keyboard/src/lib/enums/keyboard",{"_index":756,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["projects/keyboard/src/lib/interfaces/key",{"_index":5,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"coverage.html":{}}}],["projects/keyboard/src/lib/keyboard",{"_index":519,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["projects/keyboard/src/lib/keyboard.module.t",{"_index":603,"title":{},"body":{"modules/KeyboardModule.html":{}}}],["projects/keyboard/src/lib/services/key.service.t",{"_index":20,"title":{},"body":{"injectables/KeyService.html":{},"coverage.html":{}}}],["projects/keyboard/src/lib/services/key.service.ts:17",{"_index":51,"title":{},"body":{"injectables/KeyService.html":{}}}],["projects/keyboard/src/lib/services/key.service.ts:25",{"_index":32,"title":{},"body":{"injectables/KeyService.html":{}}}],["projects/keyboard/src/lib/services/key.service.ts:39",{"_index":45,"title":{},"body":{"injectables/KeyService.html":{}}}],["projects/keyboard/src/lib/services/key.service.ts:49",{"_index":36,"title":{},"body":{"injectables/KeyService.html":{}}}],["projects/keyboard/src/lib/services/keyboard.service.t",{"_index":636,"title":{},"body":{"injectables/KeyboardService.html":{},"coverage.html":{}}}],["projects/keyboard/src/lib/services/keyboard.service.ts:17",{"_index":653,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["projects/keyboard/src/lib/services/keyboard.service.ts:18",{"_index":654,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["projects/keyboard/src/lib/services/keyboard.service.ts:20",{"_index":657,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["projects/keyboard/src/lib/services/keyboard.service.ts:24",{"_index":659,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["projects/keyboard/src/lib/services/keyboard.service.ts:26",{"_index":645,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["projects/keyboard/src/lib/services/keyboard.service.ts:35",{"_index":651,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["projects/keyboard/src/lib/services/keyboard.service.ts:48",{"_index":648,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["projects/keyboard/src/lib/services/keyboard.service.ts:57",{"_index":647,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["projects/keyboard/src/lib/services/keyboard.service.ts:64",{"_index":649,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["properti",{"_index":8,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["provid",{"_index":595,"title":{},"body":{"modules/KeyboardModule.html":{},"overview.html":{}}}],["public",{"_index":24,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["q",{"_index":532,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["querylist",{"_index":132,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["r",{"_index":535,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["readonli",{"_index":172,"title":{},"body":{"components/KeyboardComponent.html":{},"directives/KeyboardDirective.html":{}}}],["ref.class",{"_index":416,"title":{},"body":{"directives/KeyboardDirective.html":{},"injectables/KeyboardService.html":{}}}],["ref.class.t",{"_index":619,"title":{},"body":{"classes/KeyboardRef.html":{},"coverage.html":{}}}],["ref.class.ts:13",{"_index":627,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["ref.class.ts:14",{"_index":626,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["ref.class.ts:33",{"_index":628,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["ref.class.ts:37",{"_index":629,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["regexp(`^(${specialkey})(:(\\\\d+(\\\\.\\\\d",{"_index":586,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["releas",{"_index":700,"title":{},"body":{"changelog.html":{}}}],["reload",{"_index":785,"title":{},"body":{"index.html":{}}}],["replaysubject",{"_index":47,"title":{},"body":{"injectables/KeyService.html":{}}}],["replaysubject(1",{"_index":50,"title":{},"body":{"injectables/KeyService.html":{}}}],["reset",{"_index":601,"title":{},"body":{"modules/KeyboardModule.html":{},"overview.html":{}}}],["result",{"_index":16,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"changelog.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":42,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{}}}],["right",{"_index":576,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"injectables/KeyboardService.html":{},"miscellaneous/variables.html":{}}}],["right('10px",{"_index":689,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["right:2",{"_index":564,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["run",{"_index":777,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":56,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"dependencies.html":{}}}],["s",{"_index":540,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["selector",{"_index":70,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{}}}],["self",{"_index":413,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["serv",{"_index":779,"title":{},"body":{"index.html":{}}}],["server",{"_index":776,"title":{},"body":{"index.html":{}}}],["services/key.servic",{"_index":156,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"modules/KeyboardModule.html":{}}}],["services/keyboard.servic",{"_index":414,"title":{},"body":{"directives/KeyboardDirective.html":{},"modules/KeyboardModule.html":{}}}],["set",{"_index":165,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{},"injectables/KeyboardService.html":{}}}],["setcursorposit",{"_index":91,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["setcursorposition(posit",{"_index":121,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["setinput",{"_index":92,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["setinput(input",{"_index":124,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["setinputvalue(valu",{"_index":151,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["setkeyboardlayout(valu",{"_index":143,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["setkeyboardtheme(valu",{"_index":146,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["setopenedkeyboardref(valu",{"_index":658,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["setpressed(valu",{"_index":473,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["shift",{"_index":53,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["shift:1.5",{"_index":548,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["shiftchang",{"_index":26,"title":{},"body":{"injectables/KeyService.html":{}}}],["shiftkey",{"_index":242,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["shiftpress",{"_index":28,"title":{},"body":{"injectables/KeyService.html":{}}}],["shiftpressed(upp",{"_index":35,"title":{},"body":{"injectables/KeyService.html":{}}}],["shouldn't",{"_index":373,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["show",{"_index":760,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["show_anim",{"_index":336,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["showkeyboard",{"_index":419,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["size",{"_index":438,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"modules/KeyboardModule.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"index.html":{}}}],["space",{"_index":570,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["space:7",{"_index":558,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["spacer",{"_index":439,"title":{},"body":{"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["spacer(:(\\d+(\\.\\d+)?))?$/g.test(key",{"_index":582,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["spacer:0.5",{"_index":531,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["special",{"_index":9,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"components/KeyboardKeyComponent.html":{}}}],["specialkey",{"_index":566,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["specialkeys.filter(specialkey",{"_index":584,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{}}}],["specialkeysicon",{"_index":479,"title":{},"body":{"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["specialkeysicons.hasownproperty(this.valu",{"_index":496,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["specialkeysicons['lock",{"_index":511,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["specialkeysicons['unlock",{"_index":498,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["specialkeysicons[this.valu",{"_index":499,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["specialkeytext",{"_index":478,"title":{},"body":{"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["specialkeytexts.hasownproperty(this.valu",{"_index":500,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["specialkeytexts[this.valu",{"_index":502,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["start",{"_index":695,"title":{"changelog.html":{},"index.html":{}},"body":{"index.html":{}}}],["state",{"_index":287,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"injectables/KeyboardService.html":{}}}],["state(`${keyboardanimationstate.vis",{"_index":343,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["state.don",{"_index":288,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["state.done(ev",{"_index":296,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["state.enum",{"_index":333,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["state.enum.t",{"_index":753,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["state.positionstrategi",{"_index":682,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["statement",{"_index":709,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":792,"title":{},"body":{"index.html":{}}}],["string",{"_index":14,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"components/KeyboardComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"injectables/KeyboardService.html":{}}}],["style",{"_index":326,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["styleurl",{"_index":73,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["subject",{"_index":315,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["sublock",{"_index":440,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["subscrib",{"_index":392,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["subscript",{"_index":467,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["subshift",{"_index":441,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["super",{"_index":353,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["support",{"_index":798,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":799,"title":{},"body":{"modules.html":{}}}],["sviluppo",{"_index":770,"title":{},"body":{"index.html":{}}}],["switch",{"_index":188,"title":{},"body":{"components/KeyboardComponent.html":{},"injectables/KeyboardService.html":{}}}],["t",{"_index":305,"title":{},"body":{"components/KeyboardContainerComponent.html":{},"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"classes/KeyboardRef.html":{},"miscellaneous/variables.html":{}}}],["tab",{"_index":763,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["tabl",{"_index":727,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":726,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":63,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{}}}],["templateurl",{"_index":75,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["test",{"_index":772,"title":{},"body":{"index.html":{}}}],["text",{"_index":442,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["theme",{"_index":170,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.act",{"_index":508,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.animationst",{"_index":386,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.attachkeyboardcont",{"_index":664,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["this.attachkeyboardcontainer(overlayref",{"_index":671,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["this.changedetectorref.detectchang",{"_index":387,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.completeexit",{"_index":370,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.containerint",{"_index":631,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["this.containerintance.exit",{"_index":634,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["this.containerintance.onexit.subscrib",{"_index":632,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["this.control",{"_index":199,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.control.setvalue(valu",{"_index":232,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.control.valu",{"_index":230,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.createoverlay",{"_index":670,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["this.cssclass",{"_index":506,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.darkthem",{"_index":168,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.destroy",{"_index":385,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.dispatchevents(key",{"_index":206,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.finishdismiss",{"_index":633,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["this.flex",{"_index":503,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.getcursorposit",{"_index":209,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.handlenormalkey",{"_index":207,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.handlenormalkey(key.valu",{"_index":205,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.handlespecialkey(key.valu",{"_index":204,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.icon",{"_index":497,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.input",{"_index":200,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.input.nativeelement.blur",{"_index":237,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.input.nativeelement.dispatchevent(new",{"_index":247,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.input.nativeelement.focu",{"_index":234,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.input.nativeelement.selectionstart",{"_index":233,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.input.nativeelement.setselectionrange(posit",{"_index":235,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.inputvalu",{"_index":213,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.inst",{"_index":630,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["this.key",{"_index":495,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.key.length",{"_index":484,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.keyboarden",{"_index":420,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["this.keyboardposit",{"_index":424,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["this.keyboardref",{"_index":421,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["this.keyboardref.dismiss",{"_index":429,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["this.keyboardref.instance.attachcontrol(this.control.control",{"_index":426,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["this.keyboardref.instance.setinput(this.elementref",{"_index":425,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["this.keyboardrefatthislevel",{"_index":661,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["this.keyboardservice.open(this.keyboardlayout",{"_index":422,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["this.keyboardthem",{"_index":423,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["this.keypress.emit",{"_index":516,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.keys.filter((key",{"_index":182,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.keyservice.lockchanged.subscribe((lock",{"_index":510,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.keyservice.shiftchanged.subscribe((upp",{"_index":515,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.keyservice.shiftpressed(this.shift",{"_index":177,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.keyservice.shiftpressed(upp",{"_index":236,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.keyservice.togglecapslock(this.lock",{"_index":176,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.layout",{"_index":164,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.lock",{"_index":173,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.lockchanged.next(lock",{"_index":59,"title":{},"body":{"injectables/KeyService.html":{}}}],["this.ngzone.onmicrotaskempti",{"_index":390,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.ngzone.run",{"_index":382,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.onent",{"_index":381,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.onexit",{"_index":389,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.onexit.complet",{"_index":394,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.onexit.next",{"_index":393,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.openedkeyboardref",{"_index":669,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["this.overlay",{"_index":683,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["this.overlay.create(st",{"_index":693,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["this.overlayref.dispos",{"_index":635,"title":{},"body":{"classes/KeyboardRef.html":{}}}],["this.portaloutlet.attachcomponentportal(port",{"_index":364,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.portaloutlet.hasattach",{"_index":359,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["this.posit",{"_index":663,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["this.pressed$.next(valu",{"_index":481,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.pressent",{"_index":191,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.setcursorposition(caret",{"_index":221,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.setcursorposition(this.getcursorposit",{"_index":223,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.shift",{"_index":175,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.shiftchanged.next(upp",{"_index":60,"title":{},"body":{"injectables/KeyService.html":{}}}],["this.spac",{"_index":485,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.speci",{"_index":487,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.sublock",{"_index":509,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.sublock.unsubscrib",{"_index":517,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.subshift",{"_index":514,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.subshift.unsubscrib",{"_index":518,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.text",{"_index":501,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.togglecapslock",{"_index":196,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.toggleshift",{"_index":194,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["this.valu",{"_index":490,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.value.tolowercas",{"_index":513,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.value.touppercas",{"_index":512,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["this.width",{"_index":504,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["throw",{"_index":357,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["todo",{"_index":796,"title":{},"body":{"index.html":{}}}],["togglecapslock",{"_index":29,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{}}}],["togglecapslock(lock",{"_index":44,"title":{},"body":{"injectables/KeyService.html":{}}}],["toggleshift",{"_index":93,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["top",{"_index":681,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["top('10px",{"_index":686,"title":{},"body":{"injectables/KeyboardService.html":{}}}],["tostat",{"_index":368,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["tostate.startswith('hidden",{"_index":369,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["transform",{"_index":344,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["transit",{"_index":327,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["transition(`${keyboardanimationtransition.hid",{"_index":346,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["transition(`${keyboardanimationtransition.show",{"_index":348,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["transition.enum",{"_index":335,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["transition.enum.t",{"_index":754,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["translatey(0",{"_index":345,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["tree",{"_index":65,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["trigger",{"_index":328,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["trigger('st",{"_index":342,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["true",{"_index":187,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{}}}],["type",{"_index":12,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"directives/KeyboardDirective.html":{},"components/KeyboardKeyComponent.html":{},"interfaces/KeyboardLayout.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["u",{"_index":537,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["undefin",{"_index":764,"title":{},"body":{"miscellaneous/functions.html":{}}}],["unit",{"_index":795,"title":{},"body":{"index.html":{}}}],["unlock",{"_index":579,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["up",{"_index":578,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["upper",{"_index":41,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["us",{"_index":374,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["v",{"_index":552,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["valu",{"_index":10,"title":{},"body":{"interfaces/KeyPressInterface.html":{},"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"injectables/KeyboardService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":256,"title":{},"body":{"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{}}}],["variabl",{"_index":714,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["view",{"_index":318,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["viewchild",{"_index":321,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["viewchild(cdkportaloutlet",{"_index":350,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["viewchildren",{"_index":134,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["viewchildren(keyboardkeycompon",{"_index":163,"title":{},"body":{"components/KeyboardComponent.html":{}}}],["virtual",{"_index":705,"title":{},"body":{"changelog.html":{}}}],["visibl",{"_index":757,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["void",{"_index":43,"title":{},"body":{"injectables/KeyService.html":{},"components/KeyboardComponent.html":{},"components/KeyboardContainerComponent.html":{},"components/KeyboardKeyComponent.html":{},"classes/KeyboardRef.html":{},"injectables/KeyboardService.html":{},"miscellaneous/enumerations.html":{}}}],["w",{"_index":533,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["w+)(:(\\d+(\\.\\d+)?))?$/g.exec(this.key",{"_index":489,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["width",{"_index":443,"title":{},"body":{"components/KeyboardKeyComponent.html":{}}}],["x",{"_index":550,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["y",{"_index":536,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["yarn",{"_index":780,"title":{},"body":{"index.html":{}}}],["ye",{"_index":406,"title":{},"body":{"directives/KeyboardDirective.html":{}}}],["z",{"_index":549,"title":{},"body":{"interfaces/KeyboardLayout.html":{},"interfaces/KeyboardLayouts.html":{},"miscellaneous/variables.html":{}}}],["zone",{"_index":376,"title":{},"body":{"components/KeyboardContainerComponent.html":{}}}],["zone.j",{"_index":748,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":600,"title":{},"body":{"modules/KeyboardModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/KeyPressInterface.html":{"url":"interfaces/KeyPressInterface.html","title":"interface - KeyPressInterface","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyPressInterface\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/keyboard/src/lib/interfaces/key-press.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        special\n                                \n                                \n                                        value\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        special\n                                    \n                                \n                                \n                                    \n                                        special:     boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        value\n                                    \n                                \n                                \n                                    \n                                        value:     string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface KeyPressInterface {\n    special: boolean;\n    value: string;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyService.html":{"url":"injectables/KeyService.html","title":"injectable - KeyService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KeyService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/keyboard/src/lib/services/key.service.ts\n        \n\n            \n                Description\n            \n            \n                KeyService class.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                lockChanged\n                            \n                            \n                                    Public\n                                shiftChanged\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                shiftPressed\n                            \n                            \n                                    Public\n                                toggleCapsLock\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in projects/keyboard/src/lib/services/key.service.ts:25\n                            \n                        \n\n                \n                    \n                            Creates an instance of KeyService.\n\n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shiftPressed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        shiftPressed(upper: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/services/key.service.ts:49\n                            \n                        \n\n\n                \n                    \n                            shiftPressed function.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        upper\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            toggleCapsLock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleCapsLock(lock: boolean)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/services/key.service.ts:39\n                            \n                        \n\n\n                \n                    \n                            toggleCapsLock function.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        lock\n                                                        \n                                                                    boolean\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            lockChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lockChanged:     ReplaySubject\n\n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/services/key.service.ts:17\n                            \n                        \n\n                \n                    \n                        Lock observable.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            shiftChanged\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shiftChanged:     ReplaySubject\n\n                    \n                \n                    \n                        \n                            Type :     ReplaySubject\n\n                        \n                    \n                    \n                        \n                            Default value : new ReplaySubject(1)\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/services/key.service.ts:25\n                            \n                        \n\n                \n                    \n                        Shift observable.\n\n                    \n                \n\n            \n        \n\n\n    \n\n\n    \n        import { Injectable } from '@angular/core';\nimport { ReplaySubject } from 'rxjs';\n/**\n *KeyService class.\n *\n * @export\n * @class KeyService\n */\n@Injectable()\nexport class KeyService {\n    /**\n     *Lock observable.\n     *\n     * @type {ReplaySubject}\n     * @memberof KeyService\n     */\n    public lockChanged: ReplaySubject = new ReplaySubject(1);\n\n    /**\n     *Shift observable.\n     *\n     * @type {ReplaySubject}\n     * @memberof KeyService\n     */\n    public shiftChanged: ReplaySubject = new ReplaySubject(1);\n\n    /**\n     *Creates an instance of KeyService.\n     * @memberof KeyService\n     */\n    constructor() { }\n\n    /**\n     *toggleCapsLock function.\n     *\n     * @param {boolean} lock\n     * @memberof KeyService\n     */\n    public toggleCapsLock(lock: boolean) {\n        this.lockChanged.next(lock);\n    }\n\n    /**\n     *shiftPressed function.\n     *\n     * @param {boolean} upper\n     * @memberof KeyService\n     */\n    public shiftPressed(upper: boolean) {\n        this.shiftChanged.next(upper);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/KeyboardComponent.html":{"url":"components/KeyboardComponent.html","title":"component - KeyboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  KeyboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/keyboard/src/lib/components/keyboard/keyboard.component.ts\n\n\n    \n        Description\n    \n    \n        KeyboardComponent class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                als-keyboard-component\n            \n\n            \n                styleUrls\n                keyboard.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./keyboard.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                control\n                            \n                            \n                                    Public\n                                darkTheme\n                            \n                            \n                                    Private\n                                input\n                            \n                            \n                                    Private\n                                keys\n                            \n                            \n                                    Private\n                                layout\n                            \n                            \n                                    Private\n                                lock\n                            \n                            \n                                    Private\n                                shift\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachControl\n                            \n                            \n                                    Private\n                                dispatchEvents\n                            \n                            \n                                    Private\n                                getCursorPosition\n                            \n                            \n                                    Private\n                                handleNormalKey\n                            \n                            \n                                    Private\n                                handleSpecialKey\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onKeyPress\n                            \n                            \n                                    Private\n                                pressEnter\n                            \n                            \n                                    Private\n                                setCursorPosition\n                            \n                            \n                                setInput\n                            \n                            \n                                    Private\n                                toggleCapsLock\n                            \n                            \n                                    Private\n                                toggleShift\n                            \n                        \n                    \n                \n\n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                document:keydown\n                            \n                            \n                                document:keyup\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(keyService: KeyService)\n                    \n                \n                        \n                            \n                                Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:43\n                            \n                        \n\n                \n                    \n                            Creates an instance of KeyboardComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyService\n                                                  \n                                                        \n                                                                    KeyService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keydown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keydown(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:60\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            document:keyup\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \ndocument:keyup(event: KeyboardEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:83\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachControl\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachControl(control: AbstractControl)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:91\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        control\n                                                        \n                                                                    AbstractControl\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            dispatchEvents\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        dispatchEvents(event: KeyPressInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:226\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    KeyPressInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            getCursorPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        getCursorPosition()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:187\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     number\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleNormalKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleNormalKey(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:158\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            handleSpecialKey\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        handleSpecialKey(value: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:109\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        value\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:52\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onKeyPress\n                            \n                            \n                        \n                    \n                \n                \n                    \nonKeyPress(key: KeyPressInterface)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:99\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                        \n                                                                    KeyPressInterface\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            pressEnter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        pressEnter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:222\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            setCursorPosition\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        setCursorPosition(position: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:195\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        position\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            setInput\n                            \n                            \n                        \n                    \n                \n                \n                    \nsetInput(input: ElementRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:95\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        input\n                                                        \n                                                                    ElementRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toggleCapsLock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleCapsLock()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:205\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            toggleShift\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        toggleShift()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:210\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            control\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        control:     AbstractControl\n\n                    \n                \n                    \n                        \n                            Type :     AbstractControl\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:22\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            darkTheme\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        darkTheme:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:25\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            input\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        input:     ElementRef\n\n                    \n                \n                    \n                        \n                            Type :     ElementRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:23\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keys:     QueryList\n\n                    \n                \n                    \n                        \n                            Type :     QueryList\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChildren\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            layout\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        layout:     KeyboardLayout\n\n                    \n                \n                    \n                        \n                            Type :     KeyboardLayout\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:24\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            lock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        lock:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            shift\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        shift:     boolean\n\n                    \n                \n                    \n                        \n                            Type :     boolean\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:28\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        keyboardLayout\n                    \n                \n\n                \n                    \n                        getkeyboardLayout()\n                    \n                \n                            \n                                \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:33\n                                \n                            \n\n                \n                    \n                        setkeyboardLayout(value: )\n                    \n                \n                            \n                                \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:37\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        keyboardTheme\n                    \n                \n\n\n                \n                    \n                        setkeyboardTheme(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:41\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n        \n            \n                \n                    \n                        \n                        inputValue\n                    \n                \n\n                \n                    \n                        getinputValue()\n                    \n                \n                            \n                                \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:175\n                                \n                            \n\n                \n                    \n                        setinputValue(value: string)\n                    \n                \n                            \n                                \n                                    Defined in projects/keyboard/src/lib/components/keyboard/keyboard.component.ts:181\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        string\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, ElementRef, HostListener, QueryList, ViewChildren } from '@angular/core';\nimport { AbstractControl } from '@angular/forms';\nimport { KeyPressInterface } from '../../interfaces/key-press.interface';\nimport { KeyboardLayout } from '../../keyboard-layout';\nimport { KeyService } from '../../services/key.service';\nimport { KeyboardKeyComponent } from '../keyboard-key/keyboard-key.component';\nimport { KeyboardKey } from '../../enums/keyboard-key.enum';\n\n/**\n *KeyboardComponent class.\n *\n * @export\n * @class KeyboardComponent\n * @implements {OnInit}\n */\n@Component({\n  selector: 'als-keyboard-component',\n  templateUrl: './keyboard.component.html',\n  styleUrls: ['./keyboard.component.scss']\n})\nexport class KeyboardComponent implements OnInit {\n  private control: AbstractControl;\n  private input: ElementRef;\n  private layout: KeyboardLayout;\n  public darkTheme: boolean;\n\n  private lock: boolean;\n  private shift: boolean;\n\n  @ViewChildren(KeyboardKeyComponent)\n  private keys: QueryList;\n\n  get keyboardLayout() {\n    return this.layout;\n  }\n\n  set keyboardLayout(value: KeyboardLayout) {\n    this.layout = value;\n  }\n\n  set keyboardTheme(value: string) {\n    this.darkTheme = value === 'dark-theme';\n  }\n\n  /**\n   *Creates an instance of KeyboardComponent.\n   * @param {KeyService} keyService\n   * @memberof KeyboardComponent\n   */\n  constructor(private readonly keyService: KeyService) { }\n\n  ngOnInit() {\n    this.lock = false;\n    this.shift = false;\n    this.keyService.toggleCapsLock(this.lock);\n    this.keyService.shiftPressed(this.shift);\n  }\n\n  @HostListener('document:keydown', ['$event'])\n  onKeyDown(event: KeyboardEvent) {\n    console.log('KeyDown:', event.key);\n    this.keys.filter((key: KeyboardKeyComponent) => (key.value === event.key ||\n      (key.value === KeyboardKey.Space && event.key === ' ')))\n      .forEach((key: KeyboardKeyComponent) => {\n        key.pressed = true;\n        switch (key.value) {\n          case KeyboardKey.Enter:\n            this.pressEnter();\n            break;\n          case KeyboardKey.Shift:\n            this.toggleShift();\n            break;\n          case KeyboardKey.CapsLock:\n            this.toggleCapsLock();\n            break;\n          default:\n            break;\n        }\n      });\n  }\n\n  @HostListener('document:keyup', ['$event'])\n  onKeyUp(event: KeyboardEvent) {\n    this.keys.filter((key: KeyboardKeyComponent) => (key.value === event.key ||\n      (key.value === KeyboardKey.Space && event.key === ' ')))\n      .forEach((key: KeyboardKeyComponent) => {\n        key.pressed = false;\n      });\n  }\n\n  attachControl(control: AbstractControl) {\n    this.control = control;\n  }\n\n  setInput(input: ElementRef) {\n    this.input = input;\n  }\n\n  onKeyPress(key: KeyPressInterface) {\n    console.log('key press:', key);\n    if (key.special) {\n      this.handleSpecialKey(key.value);\n    } else {\n      this.handleNormalKey(key.value);\n      this.dispatchEvents(key);\n    }\n  }\n\n  private handleSpecialKey(value: string) {\n    switch (value) {\n      case KeyboardKey.Space:\n        this.handleNormalKey(' ');\n        break;\n      case KeyboardKey.Backspace:\n        if (this.getCursorPosition() > 0) {\n          const current: string = this.inputValue;\n          const caret: number = this.input ? this.getCursorPosition() : 0;\n\n          if (current.length > caret) {\n            this.inputValue = [\n              current.slice(0, caret - 1),\n              current.slice(caret)\n            ].join('');\n          } else {\n            this.inputValue = current.substring(0, current.length - 1);\n          }\n\n          this.setCursorPosition(caret - 1);\n        }\n        break;\n      case KeyboardKey.Enter:\n        this.pressEnter();\n        break;\n      case KeyboardKey.ArrowRight:\n        this.setCursorPosition(this.getCursorPosition() + 1);\n        break;\n      case KeyboardKey.ArrowLeft:\n        if (this.getCursorPosition() > 0) {\n          this.setCursorPosition(this.getCursorPosition() - 1);\n        }\n        break;\n      case KeyboardKey.CapsLock:\n        this.toggleCapsLock();\n        break;\n      case KeyboardKey.Shift:\n        this.toggleShift();\n        break;\n      case KeyboardKey.Alt:\n      case KeyboardKey.AltGraph:\n      case KeyboardKey.AltLk:\n        // Not yet implemented\n        break;\n      default:\n        break;\n    }\n  }\n\n  private handleNormalKey(value: string) {\n    const current: string = this.inputValue;\n    const caret: number = this.input ? this.getCursorPosition() : 0;\n\n    if (current.length > caret) {\n      this.inputValue = [current.slice(0, caret), value, current.slice(caret)].join('');\n    } else {\n      this.inputValue = `${current}${value}`;\n    }\n\n    this.setCursorPosition(caret + 1);\n\n    if (this.shift) {\n      this.toggleShift();\n    }\n  }\n\n  private get inputValue(): string {\n    if (this.control) {\n      return this.control.value;\n    }\n  }\n\n  private set inputValue(value: string) {\n    if (this.control) {\n      this.control.setValue(value);\n    }\n  }\n\n  private getCursorPosition(): number {\n    if (!this.input) {\n      return;\n    }\n\n    return this.input.nativeElement.selectionStart;\n  }\n\n  private setCursorPosition(position: number): boolean {\n    if (!this.input) {\n      return;\n    }\n\n    this.input.nativeElement.focus();\n    this.input.nativeElement.setSelectionRange(position, position);\n    return true;\n  }\n\n  private toggleCapsLock() {\n    this.lock = !this.lock;\n    this.keyService.toggleCapsLock(this.lock);\n  }\n\n  private toggleShift() {\n    let upper: boolean;\n    this.shift = !this.shift;\n    if (this.lock) {\n      upper = !this.shift;\n    } else {\n      upper = this.shift;\n    }\n\n    this.keyService.shiftPressed(upper);\n  }\n\n  private pressEnter() {\n    this.input.nativeElement.blur();\n  }\n\n  private dispatchEvents(event: KeyPressInterface) {\n    const eventInit: KeyboardEventInit = {\n      bubbles: true,\n      cancelable: true,\n      shiftKey: this.shift,\n      key: event.value,\n      code: `Key${event.value.toUpperCase()}}`,\n      location: 0\n    };\n\n    this.input.nativeElement.dispatchEvent(new KeyboardEvent('keydown', eventInit));\n    this.input.nativeElement.dispatchEvent(new KeyboardEvent('keypress', eventInit));\n    this.input.nativeElement.dispatchEvent(new Event('input', { bubbles: true }));\n    this.input.nativeElement.dispatchEvent(new KeyboardEvent('keyup', eventInit));\n  }\n}\n\n    \n\n    \n        \n    \n        \n    \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                '\n    var COMPONENTS = [{'name': 'KeyboardComponent', 'selector': 'als-keyboard-component'},{'name': 'KeyboardContainerComponent', 'selector': 'als-keyboard-container'},{'name': 'KeyboardKeyComponent', 'selector': 'als-keyboard-key'}];\n    var DIRECTIVES = [{'name': 'KeyboardDirective', 'selector': '[alsKeyboard]'}];\n    var ACTUAL_COMPONENT = {'name': 'KeyboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/KeyboardContainerComponent.html":{"url":"components/KeyboardContainerComponent.html","title":"component - KeyboardContainerComponent","body":"\n                   \n\n\n\n\n\n  Components\n  KeyboardContainerComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts\n\n\n    \n        Description\n    \n    \n        KeyboardContainerComponent class.\n\n    \n\n    \n        Extends\n    \n    \n            BasePortalOutlet\n    \n\n    \n        Implements\n    \n    \n                OnDestroy\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n            \n                changeDetection\n                ChangeDetectionStrategy.OnPush\n            \n\n\n\n\n\n\n\n            \n                preserveWhitespaces\n                false\n            \n\n\n\n            \n                selector\n                als-keyboard-container\n            \n\n            \n                styleUrls\n                keyboard-container.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./keyboard-container.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                destroyed\n                            \n                            \n                                onEnter\n                            \n                            \n                                onExit\n                            \n                            \n                                    Private\n                                portalOutlet\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                attachComponentPortal\n                            \n                            \n                                attachTemplatePortal\n                            \n                            \n                                    Private\n                                completeExit\n                            \n                            \n                                enter\n                            \n                            \n                                exit\n                            \n                            \n                                ngOnDestroy\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostBindings\n                    \n                \n                \n                    \n                        \n                            \n                                @state\n                            \n                        \n                    \n                \n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                @state.done\n                            \n                            \n                                mousedown\n                            \n                        \n                    \n                \n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(keyService: KeyService, ngZone: NgZone, changeDetectorRef: ChangeDetectorRef)\n                    \n                \n                        \n                            \n                                Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:53\n                            \n                        \n\n                \n                    \n                            Creates an instance of KeyboardContainerComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyService\n                                                  \n                                                        \n                                                                    KeyService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        ngZone\n                                                  \n                                                        \n                                                                    NgZone\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        changeDetectorRef\n                                                  \n                                                        \n                                                                    ChangeDetectorRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n    HostBindings        \n            \n                \n                    \n                        \n                        \n                            \n                            @state\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        @state:     KeyboardAnimationState\n\n                    \n                \n                    \n                        \n                            Type :     KeyboardAnimationState\n\n                        \n                    \n                    \n                        \n                            Default value : KeyboardAnimationState.Void\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:48\n                            \n                        \n\n\n            \n        \n\n\n    \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            @state.done\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \n@state.done(event: AnimationEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:85\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            mousedown\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nmousedown(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:69\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachComponentPortal\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachComponentPortal(portal: ComponentPortal)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:77\n                            \n                        \n\n                        \n                            \n                                Type parameters :\n                                \n                                        T\n                                \n                            \n                        \n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        portal\n                                                        \n                                                                    ComponentPortal\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     ComponentRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            attachTemplatePortal\n                            \n                            \n                        \n                    \n                \n                \n                    \nattachTemplatePortal()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:73\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     EmbeddedViewRef\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            completeExit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        completeExit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:116\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            enter\n                            \n                            \n                        \n                    \n                \n                \n                    \nenter()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:104\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            exit\n                            \n                            \n                        \n                    \n                \n                \n                    \nexit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     any\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:132\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            destroyed\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        destroyed:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onEnter\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onEnter:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:53\n                            \n                        \n\n                \n                    \n                        Subject for notifying that the keyboard has finished entering the view. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onExit\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        onExit:     Subject\n\n                    \n                \n                    \n                        \n                            Type :     Subject\n\n                        \n                    \n                    \n                        \n                            Default value : new Subject()\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:51\n                            \n                        \n\n                \n                    \n                        Subject for notifying that the keyboard has exited from view. \n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            portalOutlet\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        portalOutlet:     CdkPortalOutlet\n\n                    \n                \n                    \n                        \n                            Type :     CdkPortalOutlet\n\n                        \n                    \n                    \n                        \n                            Decorators : ViewChild\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts:45\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n    \n        import {\n  Component, OnInit, ComponentRef, ViewChild,\n  ChangeDetectionStrategy, EmbeddedViewRef, NgZone, HostListener, ChangeDetectorRef,\n  OnDestroy,\n  HostBinding\n} from '@angular/core';\nimport { ComponentPortal, CdkPortalOutlet, BasePortalOutlet } from '@angular/cdk/portal';\nimport { animate, AnimationEvent, state, style, transition, trigger } from '@angular/animations';\nimport { AnimationCurves, AnimationDurations } from '@angular/material/core';\nimport { KeyboardAnimationState } from '../../enums/keyboard-animation-state.enum';\nimport { KeyboardAnimationTransition } from '../../enums/keyboard-animation-transition.enum';\n\nexport const SHOW_ANIMATION = `${AnimationDurations.ENTERING} ${AnimationCurves.DECELERATION_CURVE}`;\nexport const HIDE_ANIMATION = `${AnimationDurations.EXITING} ${AnimationCurves.ACCELERATION_CURVE}`;\n\nimport { KeyService } from '../../services/key.service';\nimport { Subject } from 'rxjs';\n\n/**\n *KeyboardContainerComponent class.\n *\n * @export\n * @class KeyboardContainerComponent\n * @extends {BasePortalOutlet}\n * @implements {OnDestroy}\n */\n@Component({\n  selector: 'als-keyboard-container',\n  templateUrl: './keyboard-container.component.html',\n  styleUrls: ['./keyboard-container.component.scss'],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  preserveWhitespaces: false,\n  animations: [\n    trigger('state', [\n      state(`${KeyboardAnimationState.Visible}`, style({ transform: 'translateY(0%)' })),\n      transition(`${KeyboardAnimationTransition.Hide}`, animate(HIDE_ANIMATION)),\n      transition(`${KeyboardAnimationTransition.Show}`, animate(SHOW_ANIMATION))\n    ])\n  ]\n})\nexport class KeyboardContainerComponent extends BasePortalOutlet implements OnDestroy {\n  private destroyed = false;\n\n  @ViewChild(CdkPortalOutlet)\n  private portalOutlet: CdkPortalOutlet;\n\n  @HostBinding('@state')\n  public animationState: KeyboardAnimationState = KeyboardAnimationState.Void;\n\n  /** Subject for notifying that the keyboard has exited from view. */\n  onExit: Subject = new Subject();\n  /** Subject for notifying that the keyboard has finished entering the view. */\n  onEnter: Subject = new Subject();\n\n  /**\n   *Creates an instance of KeyboardContainerComponent.\n   * @param {KeyService} keyService\n   * @param {NgZone} ngZone\n   * @param {ChangeDetectorRef} changeDetectorRef\n   * @memberof KeyboardContainerComponent\n   */\n  constructor(private keyService: KeyService,\n    private ngZone: NgZone,\n    private changeDetectorRef: ChangeDetectorRef) {\n    super();\n  }\n\n  @HostListener('mousedown', ['$event'])\n  onMousedown(event: MouseEvent) {\n    event.preventDefault();\n  }\n\n  attachTemplatePortal(): EmbeddedViewRef {\n    throw Error('Not yet implemented');\n  }\n\n  attachComponentPortal(portal: ComponentPortal): ComponentRef {\n    if (this.portalOutlet.hasAttached()) {\n      throw Error('Attempting to attach keyboard content after content is already attached');\n    }\n    return this.portalOutlet.attachComponentPortal(portal);\n  }\n\n  @HostListener('@state.done', ['$event'])\n  onAnimationEnd(event: AnimationEvent) {\n    const { fromState, toState } = event;\n\n    if ((toState === KeyboardAnimationState.Void && fromState !== KeyboardAnimationState.Void) || toState.startsWith('hidden')) {\n      this.completeExit();\n    }\n\n    if (toState === KeyboardAnimationState.Visible) {\n      // Note: we shouldn't use `this` inside the zone callback,\n      // because it can cause a memory leak.\n      const onEnter = this.onEnter;\n\n      this.ngZone.run(() => {\n        onEnter.next();\n        onEnter.complete();\n      });\n    }\n  }\n\n  enter() {\n    if (!this.destroyed) {\n      this.animationState = KeyboardAnimationState.Visible;\n      this.changeDetectorRef.detectChanges();\n    }\n  }\n\n  exit() {\n    this.animationState = KeyboardAnimationState.Hidden;\n    return this.onExit;\n  }\n\n  private completeExit() {\n    this.ngZone.onMicrotaskEmpty\n      .asObservable()\n      .subscribe(() => {\n        this.onExit.next();\n        this.onExit.complete();\n      });\n      // this.ngZone.onMicrotaskEmpty\n      // .asObservable()\n      // .first()\n      // .subscribe(() => {\n      //   this.onExit.next();\n      //   this.onExit.complete();\n      // });\n  }\n\n  ngOnDestroy() {\n    this.destroyed = true;\n    this.completeExit();\n  }\n}\n\n    \n\n    \n        \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = ''\n    var COMPONENTS = [{'name': 'KeyboardComponent', 'selector': 'als-keyboard-component'},{'name': 'KeyboardContainerComponent', 'selector': 'als-keyboard-container'},{'name': 'KeyboardKeyComponent', 'selector': 'als-keyboard-key'}];\n    var DIRECTIVES = [{'name': 'KeyboardDirective', 'selector': '[alsKeyboard]'}];\n    var ACTUAL_COMPONENT = {'name': 'KeyboardContainerComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"directives/KeyboardDirective.html":{"url":"directives/KeyboardDirective.html","title":"directive - KeyboardDirective","body":"\n                   \n\n\n\n\n\n\n  Directives\n  KeyboardDirective\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/keyboard/src/lib/directives/keyboard.directive.ts\n        \n\n            \n                Description\n            \n            \n                KeyboardDirective class.\n\n            \n\n\n            \n                Example\n            \n            \n            \n\n        \n            Metadata\n            \n                \n\n                    \n                        selector\n                        [alsKeyboard]\n                    \n\n                \n            \n        \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                keyboardRef\n                            \n                        \n                    \n                \n\n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                keyboardEnabled\n                            \n                            \n                                keyboardLayout\n                            \n                            \n                                keyboardPosition\n                            \n                            \n                                keyboardTheme\n                            \n                        \n                    \n                \n\n\n\n                \n                    \n                        HostListeners\n                    \n                \n                \n                    \n                        \n                            \n                                blur\n                            \n                            \n                                focus\n                            \n                        \n                    \n                \n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(elementRef: ElementRef, keyboardService: KeyboardService, control?: NgControl)\n                    \n                \n                        \n                            \n                                Defined in projects/keyboard/src/lib/directives/keyboard.directive.ts:22\n                            \n                        \n\n                \n                    \n                            Creates an instance of KeyboardDirective.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        elementRef\n                                                  \n                                                        \n                                                                    ElementRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        keyboardService\n                                                  \n                                                        \n                                                                    KeyboardService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        control\n                                                  \n                                                        \n                                                                    NgControl\n                                                        \n                                                  \n                                                    \n                                                            yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    Inputs\n        \n            \n                \n                    \n                        \n                        keyboardEnabled\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/directives/keyboard.directive.ts:22\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        keyboardLayout\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/directives/keyboard.directive.ts:19\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        keyboardPosition\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/directives/keyboard.directive.ts:21\n                            \n                        \n            \n        \n        \n            \n                \n                    \n                        \n                        keyboardTheme\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/directives/keyboard.directive.ts:20\n                            \n                        \n            \n        \n\n\n\n            \n    HostListeners        \n            \n                \n                    \n                        \n                        \n                            \n                            blur\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nblur()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/directives/keyboard.directive.ts:45\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            focus\n                            \n                            \n                        \n                    \n                \n                    \n                        \n                            Arguments : '$event' \n                        \n                    \n                \n                    \nfocus()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/directives/keyboard.directive.ts:36\n                            \n                        \n\n\n            \n        \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyboardRef\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keyboardRef:     KeyboardRef\n\n                    \n                \n                    \n                        \n                            Type :     KeyboardRef\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/directives/keyboard.directive.ts:17\n                            \n                        \n\n\n            \n        \n\n\n\n    \n\n\n    \n        import { Directive, ElementRef, HostListener, Input, Optional, Self } from '@angular/core';\nimport { KeyboardService } from '../services/keyboard.service';\nimport { KeyboardRef } from '../classes/keyboard-ref.class';\nimport { KeyboardComponent } from '../components/keyboard/keyboard.component';\nimport { NgControl } from '@angular/forms';\n\n/**\n *KeyboardDirective class.\n *\n * @export\n * @class KeyboardDirective\n */\n@Directive({\n  selector: '[alsKeyboard]'\n})\nexport class KeyboardDirective {\n  private keyboardRef: KeyboardRef;\n\n  @Input() keyboardLayout: string;\n  @Input() keyboardTheme: string;\n  @Input() keyboardPosition: string;\n  @Input() keyboardEnabled: string;\n\n  /**\n   *Creates an instance of KeyboardDirective.\n   * @param {ElementRef} elementRef\n   * @param {KeyboardService} keyboardService\n   * @param {NgControl} [control]\n   * @memberof KeyboardDirective\n   */\n  constructor(private elementRef: ElementRef,\n    private readonly keyboardService: KeyboardService,\n    @Optional() @Self() private control?: NgControl) { }\n\n  @HostListener('focus', ['$event'])\n  private showKeyboard() {\n    if (!this.keyboardEnabled || this.keyboardEnabled === 'true') {\n      this.keyboardRef = this.keyboardService.open(this.keyboardLayout, this.keyboardTheme, this.keyboardPosition);\n      this.keyboardRef.instance.setInput(this.elementRef);\n      this.keyboardRef.instance.attachControl(this.control.control);\n    }\n  }\n\n  @HostListener('blur', ['$event'])\n  private hideKeyboard() {\n    if (this.keyboardRef) {\n      this.keyboardRef.dismiss();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/KeyboardKeyComponent.html":{"url":"components/KeyboardKeyComponent.html","title":"component - KeyboardKeyComponent","body":"\n                   \n\n\n\n\n\n  Components\n  KeyboardKeyComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts\n\n\n    \n        Description\n    \n    \n        KeyboardKeyComponent class.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n    \n        Example\n    \n    \n    \n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                als-keyboard-key\n            \n\n            \n                styleUrls\n                keyboard-key.component.scss\n            \n\n\n\n            \n                templateUrl\n                ./keyboard-key.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                active\n                            \n                            \n                                    Public\n                                cssClass\n                            \n                            \n                                    Public\n                                flex\n                            \n                            \n                                    Public\n                                height\n                            \n                            \n                                    Public\n                                icon\n                            \n                            \n                                    Public\n                                pressed$\n                            \n                            \n                                    Public\n                                size\n                            \n                            \n                                    Public\n                                spacer\n                            \n                            \n                                    Public\n                                special\n                            \n                            \n                                    Private\n                                subLock\n                            \n                            \n                                    Private\n                                subShift\n                            \n                            \n                                    Public\n                                text\n                            \n                            \n                                    Public\n                                value\n                            \n                            \n                                    Public\n                                width\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onKeyPress\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                key\n                            \n                        \n                    \n                \n\n                \n                    \n                        Outputs\n                    \n                \n                \n                    \n                        \n                            \n                                keyPress\n                            \n                        \n                    \n                \n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(keyService: KeyService)\n                    \n                \n                        \n                            \n                                Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:46\n                            \n                        \n\n                \n                    \n                            Creates an instance of KeyboardKeyComponent.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyService\n                                                  \n                                                        \n                                                                    KeyService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        key\n                    \n                    \n                            \n                            Type:    string\n\n                            \n                    \n                \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:23\n                            \n                        \n            \n        \n\n    \n    Outputs\n        \n            \n                \n                    \n                        \n                        keyPress\n                    \n                    \n                        $event type:    EventEmitter\n\n                    \n                \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:24\n                            \n                        \n            \n        \n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnDestroy\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnDestroy()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:118\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:55\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            onKeyPress\n                            \n                            \n                        \n                    \n                \n                \n                    \nonKeyPress(event: MouseEvent)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:111\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        event\n                                                        \n                                                                    MouseEvent\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            active\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        active:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:36\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            cssClass\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        cssClass:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            flex\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        flex:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            height\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        height:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:39\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            icon\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        icon:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            pressed$\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        pressed$:     BehaviorSubject\n\n                    \n                \n                    \n                        \n                            Type :     BehaviorSubject\n\n                        \n                    \n                    \n                        \n                            Default value : new BehaviorSubject(false)\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:42\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            size\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        size:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 28\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:40\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            spacer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        spacer:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            special\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        special:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subLock\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subLock:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:26\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            subShift\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        subShift:     Subscription\n\n                    \n                \n                    \n                        \n                            Type :     Subscription\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:27\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            text\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        text:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            value\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        value:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:29\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            width\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        width:     number\n\n                    \n                \n                    \n                        \n                            Type :     number\n\n                        \n                    \n                    \n                        \n                            Default value : 50\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:38\n                            \n                        \n\n\n            \n        \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        pressed\n                    \n                \n\n\n                \n                    \n                        setpressed(value: boolean)\n                    \n                \n                            \n                                \n                                    Defined in projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts:44\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                        Type\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                            \n                                                                        boolean\n                                                            \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n\n\n\n    \n        import { Component, OnInit, Input, ElementRef, EventEmitter, Output, OnDestroy } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { KeyPressInterface } from '../../interfaces/key-press.interface';\nimport { isSpacer, isSpecial, SpecialKeyTexts, SpecialKeysIcons } from '../../keyboard-layout';\nimport { Subscription, BehaviorSubject } from 'rxjs';\nimport { KeyService } from '../../services/key.service';\nimport { KeyboardKey } from '../../enums/keyboard-key.enum';\n\n/**\n *KeyboardKeyComponent class.\n *\n * @export\n * @class KeyboardKeyComponent\n * @implements {OnInit}\n * @implements {OnDestroy}\n */\n@Component({\n  selector: 'als-keyboard-key',\n  templateUrl: './keyboard-key.component.html',\n  styleUrls: ['./keyboard-key.component.scss']\n})\nexport class KeyboardKeyComponent implements OnInit, OnDestroy {\n  @Input() key: string;\n  @Output() keyPress = new EventEmitter();\n\n  private subLock: Subscription;\n  private subShift: Subscription;\n\n  public value: string;\n  public flex: string;\n  public spacer = false;\n  public special = false;\n  public icon: string;\n  public text: string;\n  public cssClass: string;\n  public active = false;\n\n  public width = 50;\n  public height = 50;\n  public size = 28;\n\n  public pressed$: BehaviorSubject = new BehaviorSubject(false);\n\n  set pressed(value: boolean) {\n    this.pressed$.next(value);\n  }\n\n  /**\n   *Creates an instance of KeyboardKeyComponent.\n   * @param {KeyService} keyService\n   * @memberof KeyboardKeyComponent\n   */\n  constructor(private keyService: KeyService) { }\n\n  ngOnInit() {\n    let multiplier = 1;\n    let fix = 0;\n\n    if (this.key.length > 1) {\n      this.spacer = isSpacer(this.key);\n      this.special = isSpecial(this.key);\n\n      const matches = /^(\\w+)(:(\\d+(\\.\\d+)?))?$/g.exec(this.key);\n\n      this.value = matches[1];\n\n      if (matches[3]) {\n        multiplier = parseFloat(matches[3]);\n        fix = (multiplier - 1) * 6;\n      }\n    } else {\n      this.value = this.key;\n    }\n\n    if (this.special) {\n      if (SpecialKeysIcons.hasOwnProperty(this.value)) {\n        if (this.value === KeyboardKey.CapsLock) {\n          this.icon = SpecialKeysIcons['Unlock'];\n        } else {\n          this.icon = SpecialKeysIcons[this.value];\n        }\n      } else if (SpecialKeyTexts.hasOwnProperty(this.value)) {\n        this.text = SpecialKeyTexts[this.value];\n      }\n    }\n\n    this.flex = `${multiplier * this.width + fix}px`;\n\n    if (this.value === KeyboardKey.CapsLock) {\n      this.cssClass = 'als-keyboard-key-capslock';\n      this.icon = SpecialKeysIcons['Unlock'];\n      this.active = false;\n    }\n    this.subLock = this.keyService.lockChanged.subscribe((lock: boolean) => {\n      if (this.special && this.value === 'Lock') {\n        this.icon = lock ? SpecialKeysIcons['Lock'] : SpecialKeysIcons['Unlock'];\n        // this.cssClass = lock ? 'als-keyboard-key-capslock-active' : 'als-keyboard-key-capslock';\n        this.active = lock;\n      } else if (!this.special) {\n        this.value = lock ? this.value.toUpperCase() : this.value.toLowerCase();\n      }\n    });\n\n    this.subShift = this.keyService.shiftChanged.subscribe((upper: boolean) => {\n      if (!this.special) {\n        this.value = upper ? this.value.toUpperCase() : this.value.toLowerCase();\n      }\n    });\n  }\n\n  onKeyPress(event: MouseEvent): void {\n    this.keyPress.emit({\n      special: this.special,\n      value: this.value,\n    });\n  }\n\n  ngOnDestroy(): void {\n    if (this.subLock) {\n      this.subLock.unsubscribe();\n    }\n\n    if (this.subShift) {\n      this.subShift.unsubscribe();\n    }\n  }\n}\n\n    \n\n    \n        \n  {{value}}\n  {{text}}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{value}}  {{text}}'\n    var COMPONENTS = [{'name': 'KeyboardComponent', 'selector': 'als-keyboard-component'},{'name': 'KeyboardContainerComponent', 'selector': 'als-keyboard-container'},{'name': 'KeyboardKeyComponent', 'selector': 'als-keyboard-key'}];\n    var DIRECTIVES = [{'name': 'KeyboardDirective', 'selector': '[alsKeyboard]'}];\n    var ACTUAL_COMPONENT = {'name': 'KeyboardKeyComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyboardLayout.html":{"url":"interfaces/KeyboardLayout.html","title":"interface - KeyboardLayout","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyboardLayout\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/keyboard/src/lib/keyboard-layout.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        keys\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        keys\n                                    \n                                \n                                \n                                    \n                                        keys:     Array>\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     Array>\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface KeyboardLayout {\n    keys: Array>;\n}\n\n/**\n *\n *\n * @export\n * @interface KeyboardLayouts\n */\nexport interface KeyboardLayouts {\n    [layout: string]: KeyboardLayout;\n}\n\n\nexport const keyboardLayouts: KeyboardLayouts = {\n    'alphanumeric': {\n        keys: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Backspace:1'],\n            ['Spacer:0.5', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'Spacer:0.5'],\n            ['CapsLock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'Spacer'],\n            ['Shift:1.5', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'Enter:2.5'],\n            ['ArrowLeft:2', 'Space:7', 'ArrowRight:2']\n        ]\n    },\n    'numeric': {\n        keys: [\n            ['1', '2', '3'],\n            ['4', '5', '6'],\n            ['7', '8', '9'],\n            ['0', 'Enter:2'],\n        ]\n    }\n};\n\n// export const AlphanumericKeyboard: KeyboardLayout = [\n//     ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Backspace:1'],\n//     ['Spacer:0.5', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'Spacer:0.5'],\n//     ['Lock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'Spacer'],\n//     ['Shift:1.5', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'Enter:2.5'],\n//     ['Left:2', 'Space:7', 'Right:2']\n// ];\n\n// export const NumericKeyboard: KeyboardLayout = [\n//     ['1', '2', '3'],\n//     ['4', '5', '6'],\n//     ['7', '8', '9'],\n//     ['', '0', ''],\n// ];\n\nexport const SpecialKeys: Array = [\n    'Backspace',\n    'ArrowLeft',\n    'ArrowRight',\n    'Space',\n    'Spacer',\n    'Shift',\n    'Enter',\n    'CapsLock'\n];\n\nexport const SpecialKeysIcons = {\n    Backspace: 'fa fa-long-arrow-alt-left',\n    ArrowRight: 'fa fa-caret-right',\n    ArrowLeft: 'fa fa-caret-left',\n    Shift: 'fa fa-angle-up',\n    Lock: 'fa fa-lock',\n    Unlock: 'fa fa-unlock-alt'\n};\n\nexport const SpecialKeyTexts = {\n    Enter: 'Enter'\n};\n\n/**\n *\n *\n * @export\n * @param {string} key\n * @returns {boolean}\n */\nexport function isSpacer(key: string): boolean {\n    if (key.length > 1) {\n        return /^Spacer(:(\\d+(\\.\\d+)?))?$/g.test(key);\n    }\n\n    return false;\n}\n\n/**\n *\n *\n * @export\n * @param {string} key\n * @returns {boolean}\n */\nexport function isSpecial(key: string): boolean {\n    if (key.length > 1) {\n        return !!SpecialKeys.filter(specialKey => {\n            const pattern = new RegExp(`^(${specialKey})(:(\\\\d+(\\\\.\\\\d+)?))?$`, 'g');\n\n            return pattern.test(key);\n        }).length;\n    }\n\n    return false;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/KeyboardLayouts.html":{"url":"interfaces/KeyboardLayouts.html","title":"interface - KeyboardLayouts","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  KeyboardLayouts\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/keyboard/src/lib/keyboard-layout.ts\n        \n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [layout: string]:    KeyboardLayout\n\n                    \n                \n                        \n                            \n                                Defined in projects/keyboard/src/lib/keyboard-layout.ts:17\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface KeyboardLayout {\n    keys: Array>;\n}\n\n/**\n *\n *\n * @export\n * @interface KeyboardLayouts\n */\nexport interface KeyboardLayouts {\n    [layout: string]: KeyboardLayout;\n}\n\n\nexport const keyboardLayouts: KeyboardLayouts = {\n    'alphanumeric': {\n        keys: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Backspace:1'],\n            ['Spacer:0.5', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'Spacer:0.5'],\n            ['CapsLock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'Spacer'],\n            ['Shift:1.5', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'Enter:2.5'],\n            ['ArrowLeft:2', 'Space:7', 'ArrowRight:2']\n        ]\n    },\n    'numeric': {\n        keys: [\n            ['1', '2', '3'],\n            ['4', '5', '6'],\n            ['7', '8', '9'],\n            ['0', 'Enter:2'],\n        ]\n    }\n};\n\n// export const AlphanumericKeyboard: KeyboardLayout = [\n//     ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Backspace:1'],\n//     ['Spacer:0.5', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'Spacer:0.5'],\n//     ['Lock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'Spacer'],\n//     ['Shift:1.5', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'Enter:2.5'],\n//     ['Left:2', 'Space:7', 'Right:2']\n// ];\n\n// export const NumericKeyboard: KeyboardLayout = [\n//     ['1', '2', '3'],\n//     ['4', '5', '6'],\n//     ['7', '8', '9'],\n//     ['', '0', ''],\n// ];\n\nexport const SpecialKeys: Array = [\n    'Backspace',\n    'ArrowLeft',\n    'ArrowRight',\n    'Space',\n    'Spacer',\n    'Shift',\n    'Enter',\n    'CapsLock'\n];\n\nexport const SpecialKeysIcons = {\n    Backspace: 'fa fa-long-arrow-alt-left',\n    ArrowRight: 'fa fa-caret-right',\n    ArrowLeft: 'fa fa-caret-left',\n    Shift: 'fa fa-angle-up',\n    Lock: 'fa fa-lock',\n    Unlock: 'fa fa-unlock-alt'\n};\n\nexport const SpecialKeyTexts = {\n    Enter: 'Enter'\n};\n\n/**\n *\n *\n * @export\n * @param {string} key\n * @returns {boolean}\n */\nexport function isSpacer(key: string): boolean {\n    if (key.length > 1) {\n        return /^Spacer(:(\\d+(\\.\\d+)?))?$/g.test(key);\n    }\n\n    return false;\n}\n\n/**\n *\n *\n * @export\n * @param {string} key\n * @returns {boolean}\n */\nexport function isSpecial(key: string): boolean {\n    if (key.length > 1) {\n        return !!SpecialKeys.filter(specialKey => {\n            const pattern = new RegExp(`^(${specialKey})(:(\\\\d+(\\\\.\\\\d+)?))?$`, 'g');\n\n            return pattern.test(key);\n        }).length;\n    }\n\n    return false;\n}\n\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/KeyboardModule.html":{"url":"modules/KeyboardModule.html","title":"module - KeyboardModule","body":"\n                   \n\n\n\n\n  Modules\n  KeyboardModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeyboardModule\n\n\n\ncluster_KeyboardModule_declarations\n\n\n\ncluster_KeyboardModule_exports\n\n\n\ncluster_KeyboardModule_providers\n\n\n\n\nKeyboardComponent\n\nKeyboardComponent\n\n\n\nKeyboardModule\n\nKeyboardModule\n\nKeyboardModule -->\n\nKeyboardComponent->KeyboardModule\n\n\n\n\n\nKeyboardContainerComponent\n\nKeyboardContainerComponent\n\nKeyboardModule -->\n\nKeyboardContainerComponent->KeyboardModule\n\n\n\n\n\nKeyboardDirective\n\nKeyboardDirective\n\nKeyboardModule -->\n\nKeyboardDirective->KeyboardModule\n\n\n\n\n\nKeyboardKeyComponent\n\nKeyboardKeyComponent\n\nKeyboardModule -->\n\nKeyboardKeyComponent->KeyboardModule\n\n\n\n\n\nKeyboardDirective \n\nKeyboardDirective \n\nKeyboardDirective  -->\n\nKeyboardModule->KeyboardDirective \n\n\n\n\n\nKeyService\n\nKeyService\n\nKeyboardModule -->\n\nKeyService->KeyboardModule\n\n\n\n\n\nKeyboardService\n\nKeyboardService\n\nKeyboardModule -->\n\nKeyboardService->KeyboardModule\n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            projects/keyboard/src/lib/keyboard.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                KeyboardComponent\n                            \n                            \n                                KeyboardContainerComponent\n                            \n                            \n                                KeyboardDirective\n                            \n                            \n                                KeyboardKeyComponent\n                            \n                    \n                \n                \n                    EntryComponents\n                    \n                            \n                                KeyboardComponent\n                            \n                            \n                                KeyboardContainerComponent\n                            \n                            \n                                KeyboardKeyComponent\n                            \n                    \n                \n                \n                    Providers\n                    \n                            \n                                     KeyService\n                            \n                            \n                                     KeyboardService\n                            \n                    \n                \n                \n                    Exports\n                    \n                            \n                                    KeyboardDirective\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { KeyboardDirective } from './directives/keyboard.directive';\nimport { KeyboardService } from './services/keyboard.service';\nimport { KeyboardComponent } from './components/keyboard/keyboard.component';\nimport { KeyboardContainerComponent } from './components/keyboard-container/keyboard-container.component';\nimport { KeyboardKeyComponent } from './components/keyboard-key/keyboard-key.component';\nimport { CommonModule } from '@angular/common';\nimport { OverlayModule } from '@angular/cdk/overlay';\nimport { PortalModule } from '@angular/cdk/portal';\nimport { MatButtonModule } from '@angular/material';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { KeyService } from './services/key.service';\n\n@NgModule({\n    imports: [\n        CommonModule,\n        OverlayModule,\n        PortalModule,\n\n        MatButtonModule,\n        FlexLayoutModule\n    ],\n    declarations: [\n        KeyboardDirective,\n        KeyboardComponent,\n        KeyboardContainerComponent,\n        KeyboardKeyComponent\n    ],\n    entryComponents: [\n        KeyboardComponent,\n        KeyboardContainerComponent,\n        KeyboardKeyComponent\n    ],\n    exports: [\n        KeyboardDirective\n    ],\n    providers: [\n        KeyboardService, KeyService\n    ]\n})\n\nexport class KeyboardModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/KeyboardRef.html":{"url":"classes/KeyboardRef.html","title":"class - KeyboardRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  KeyboardRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/keyboard/src/lib/classes/keyboard-ref.class.ts\n        \n\n            \n                Description\n            \n            \n                KeyboardRef class.\n\n            \n\n\n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                containerIntance\n                            \n                            \n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                dismiss\n                            \n                            \n                                    Private\n                                finishDismiss\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(instance: KeyboardComponent, containerInstance: KeyboardContainerComponent, overlayRef: OverlayRef)\n                    \n                \n                        \n                            \n                                Defined in projects/keyboard/src/lib/classes/keyboard-ref.class.ts:14\n                            \n                        \n\n                \n                    \n                            Creates an instance of KeyboardRef.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        instance\n                                                  \n                                                        \n                                                                    KeyboardComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        containerInstance\n                                                  \n                                                        \n                                                                    KeyboardContainerComponent\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                                \n                                                        overlayRef\n                                                  \n                                                        \n                                                                    OverlayRef\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            containerIntance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        containerIntance:     KeyboardContainerComponent\n\n                    \n                \n                    \n                        \n                            Type :     KeyboardContainerComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/classes/keyboard-ref.class.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            instance\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        instance:     KeyboardComponent\n\n                    \n                \n                    \n                        \n                            Type :     KeyboardComponent\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/classes/keyboard-ref.class.ts:13\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            dismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \ndismiss()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/classes/keyboard-ref.class.ts:33\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            finishDismiss\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        finishDismiss()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/classes/keyboard-ref.class.ts:37\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        import { KeyboardComponent } from '../components/keyboard/keyboard.component';\nimport { KeyboardContainerComponent } from '../components/keyboard-container/keyboard-container.component';\nimport { OverlayRef } from '@angular/cdk/overlay';\n\n/**\n *KeyboardRef class.\n *\n * @export\n * @class KeyboardRef\n * @template T\n */\nexport class KeyboardRef {\n    instance: KeyboardComponent;\n    containerIntance: KeyboardContainerComponent;\n\n    /**\n     *Creates an instance of KeyboardRef.\n     * @param {KeyboardComponent} instance\n     * @param {KeyboardContainerComponent} containerInstance\n     * @param {OverlayRef} overlayRef\n     * @memberof KeyboardRef\n     */\n    constructor(instance: KeyboardComponent,\n        containerInstance: KeyboardContainerComponent,\n        private overlayRef: OverlayRef) {\n\n        this.instance = instance;\n        this.containerIntance = containerInstance;\n\n        this.containerIntance.onExit.subscribe(() => this.finishDismiss());\n    }\n\n    dismiss() {\n        this.containerIntance.exit();\n    }\n\n    private finishDismiss() {\n        this.overlayRef.dispose();\n    }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/KeyboardService.html":{"url":"injectables/KeyboardService.html","title":"injectable - KeyboardService","body":"\n                   \n\n\n\n\n\n\n\n  Injectables\n  KeyboardService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            projects/keyboard/src/lib/services/keyboard.service.ts\n        \n\n            \n                Description\n            \n            \n                KeyboeardService class.\n\n            \n\n            \n                Example\n            \n            \n            \n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                keyboardRefAtThisLevel\n                            \n                            \n                                    Private\n                                position\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                attachKeyboardContainer\n                            \n                            \n                                    Private\n                                attachKeyboardContent\n                            \n                            \n                                    Private\n                                createOverlay\n                            \n                            \n                                open\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(overlay: Overlay)\n                    \n                \n                        \n                            \n                                Defined in projects/keyboard/src/lib/services/keyboard.service.ts:26\n                            \n                        \n\n                \n                    \n                            Creates an instance of KeyboardService.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlay\n                                                  \n                                                        \n                                                                    Overlay\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            attachKeyboardContainer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachKeyboardContainer(overlayRef: OverlayRef)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/services/keyboard.service.ts:57\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        overlayRef\n                                                        \n                                                                    OverlayRef\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     KeyboardContainerComponent\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            attachKeyboardContent\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        attachKeyboardContent()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/services/keyboard.service.ts:48\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     KeyboardRef\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            createOverlay\n                            \n                            \n                        \n                    \n                \n                \n                    \n                            \n                        createOverlay()\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/services/keyboard.service.ts:64\n                            \n                        \n\n\n                \n                    \n\n                            \n                                Returns :     OverlayRef\n\n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            open\n                            \n                            \n                        \n                    \n                \n                \n                    \nopen(keyboardLayout: string, keyboardTheme: string, keyboardPosition: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in projects/keyboard/src/lib/services/keyboard.service.ts:35\n                            \n                        \n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        keyboardLayout\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        keyboardTheme\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                                \n                                                        keyboardPosition\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     KeyboardRef\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            keyboardRefAtThisLevel\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keyboardRefAtThisLevel:     KeyboardRef | null\n\n                    \n                \n                    \n                        \n                            Type :     KeyboardRef | null\n\n                        \n                    \n                    \n                        \n                            Default value : null\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/services/keyboard.service.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Private\n                            position\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        position:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in projects/keyboard/src/lib/services/keyboard.service.ts:18\n                            \n                        \n\n\n            \n        \n\n\n            \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        openedKeyboardRef\n                    \n                \n\n                \n                    \n                        getopenedKeyboardRef()\n                    \n                \n                            \n                                \n                                    Defined in projects/keyboard/src/lib/services/keyboard.service.ts:20\n                                \n                            \n\n                \n                    \n                        setopenedKeyboardRef(value: )\n                    \n                \n                            \n                                \n                                    Defined in projects/keyboard/src/lib/services/keyboard.service.ts:24\n                                \n                            \n                    \n                        \n\n                                \n                                        Parameters :\n                                        \n                                            \n                                                \n                                                    Name\n                                                    Optional\n                                                \n                                            \n                                            \n                                                    \n                                                            value\n                                                    \n                                                    \n                                                        \n                                                                no\n                                                        \n                                                        \n                                                    \n                                            \n                                        \n                                \n                                \n                                \n                                \n                                    Returns :     void\n\n                                \n                        \n                    \n            \n        \n\n    \n\n\n    \n        import { Injectable, ComponentRef } from '@angular/core';\nimport { KeyboardRef } from '../classes/keyboard-ref.class';\nimport { KeyboardComponent } from '../components/keyboard/keyboard.component';\nimport { OverlayRef, OverlayConfig, Overlay } from '@angular/cdk/overlay';\nimport { KeyboardContainerComponent } from '../components/keyboard-container/keyboard-container.component';\nimport { ComponentPortal } from '@angular/cdk/portal';\nimport { keyboardLayouts } from '../keyboard-layout';\n\n/**\n *KeyboeardService class.\n *\n * @export\n * @class KeyboardService\n */\n@Injectable()\nexport class KeyboardService {\n    private keyboardRefAtThisLevel: KeyboardRef | null = null;\n    private position: string;\n\n    private get openedKeyboardRef(): KeyboardRef | null {\n        return this.keyboardRefAtThisLevel;\n    }\n\n    private set openedKeyboardRef(value: KeyboardRef) {\n        this.keyboardRefAtThisLevel = value;\n    }\n\n    /**\n     *Creates an instance of KeyboardService.\n     * @param {Overlay} overlay\n     * @memberof KeyboardService\n     */\n    constructor(private overlay: Overlay) { }\n\n    open(keyboardLayout: string, keyboardTheme: string, keyboardPosition: string): KeyboardRef {\n        this.position = keyboardPosition;\n\n        const keyboardRef: KeyboardRef = this.attachKeyboardContent();\n\n        keyboardRef.instance.keyboardLayout = keyboardLayouts[keyboardLayout];\n        keyboardRef.instance.keyboardTheme = keyboardTheme;\n        keyboardRef.containerIntance.enter();\n\n        this.openedKeyboardRef = keyboardRef;\n        return this.openedKeyboardRef;\n    }\n\n    private attachKeyboardContent(): KeyboardRef {\n        const overlayRef = this.createOverlay();\n        const container = this.attachKeyboardContainer(overlayRef);\n        const portal = new ComponentPortal(KeyboardComponent);\n        const contentRef = container.attachComponentPortal(portal);\n\n        return new KeyboardRef(contentRef.instance, container, overlayRef) as KeyboardRef;\n    }\n\n    private attachKeyboardContainer(overlayRef: OverlayRef): KeyboardContainerComponent {\n        const containerPortal = new ComponentPortal(KeyboardContainerComponent);\n        const containerRef: ComponentRef = overlayRef.attach(containerPortal);\n\n        return containerRef.instance;\n    }\n\n    private createOverlay(): OverlayRef {\n        const state = new OverlayConfig();\n        switch (this.position) {\n            case 'top left':\n                state.positionStrategy = this.overlay\n                    .position()\n                    .global()\n                    .left('10px')\n                    .top('10px');\n                break;\n            case 'top center':\n                state.positionStrategy = this.overlay\n                    .position()\n                    .global()\n                    .centerHorizontally()\n                    .top('10px');\n                break;\n            case 'top right':\n                state.positionStrategy = this.overlay\n                    .position()\n                    .global()\n                    .right('10px')\n                    .top('10px');\n                break;\n            case 'center left':\n                state.positionStrategy = this.overlay\n                    .position()\n                    .global()\n                    .left('10px')\n                    .centerVertically();\n                break;\n            case 'center center':\n                state.positionStrategy = this.overlay\n                    .position()\n                    .global()\n                    .centerHorizontally()\n                    .centerVertically();\n                break;\n            case 'center right':\n                state.positionStrategy = this.overlay\n                    .position()\n                    .global()\n                    .right('10px')\n                    .centerVertically();\n                break;\n            case 'bottom left':\n                state.positionStrategy = this.overlay\n                    .position()\n                    .global()\n                    .left('10px')\n                    .bottom('10px');\n                break;\n            case 'bottom center':\n                state.positionStrategy = this.overlay\n                    .position()\n                    .global()\n                    .centerHorizontally()\n                    .bottom('10px');\n                break;\n            case 'bottom right':\n                state.positionStrategy = this.overlay\n                    .position()\n                    .global()\n                    .right('10px')\n                    .bottom('10px');\n                break;\n            default:\n                state.positionStrategy = this.overlay\n                    .position()\n                    .global()\n                    .centerHorizontally()\n                    .centerVertically();\n                break;\n        }\n\n        return this.overlay.create(state);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"changelog.html":{"url":"changelog.html","title":"getting-started - changelog","body":"\n                   \n\n[1.0.0] - 2018-06-06\nFirst release of ALS Angular Libraries\nThis inaugural release includes 1 component:\n\nkeyboard a virtual keyboard component\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    projects/keyboard/src/lib/classes/keyboard-ref.class.ts\n            \n            \n                class\n            \n            \n                KeyboardRef\n            \n            \n                33 %\n                (2/6)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts\n            \n            \n                component\n            \n            \n                KeyboardContainerComponent\n            \n            \n                26 %\n                (4/15)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts\n            \n            \n                variable\n            \n            \n                HIDE_ANIMATION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts\n            \n            \n                variable\n            \n            \n                SHOW_ANIMATION\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/components/keyboard-key/keyboard-key.component.ts\n            \n            \n                component\n            \n            \n                KeyboardKeyComponent\n            \n            \n                9 %\n                (2/21)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/components/keyboard/keyboard.component.ts\n            \n            \n                component\n            \n            \n                KeyboardComponent\n            \n            \n                8 %\n                (2/23)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/directives/keyboard.directive.ts\n            \n            \n                directive\n            \n            \n                KeyboardDirective\n            \n            \n                22 %\n                (2/9)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/interfaces/key-press.interface.ts\n            \n            \n                interface\n            \n            \n                KeyPressInterface\n            \n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/keyboard-layout.ts\n            \n            \n                interface\n            \n            \n                KeyboardLayout\n            \n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/keyboard-layout.ts\n            \n            \n                interface\n            \n            \n                KeyboardLayouts\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/keyboard-layout.ts\n            \n            \n                function\n            \n            \n                isSpacer\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/keyboard-layout.ts\n            \n            \n                function\n            \n            \n                isSpecial\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/keyboard-layout.ts\n            \n            \n                variable\n            \n            \n                keyboardLayouts\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/keyboard-layout.ts\n            \n            \n                variable\n            \n            \n                SpecialKeys\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/keyboard-layout.ts\n            \n            \n                variable\n            \n            \n                SpecialKeysIcons\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/keyboard-layout.ts\n            \n            \n                variable\n            \n            \n                SpecialKeyTexts\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/services/key.service.ts\n            \n            \n                injectable\n            \n            \n                KeyService\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    projects/keyboard/src/lib/services/keyboard.service.ts\n            \n            \n                injectable\n            \n            \n                KeyboardService\n            \n            \n                25 %\n                (2/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^6.0.3\n        \n            @angular/cdk : ^6.2.1\n        \n            @angular/common : ^6.0.3\n        \n            @angular/compiler : ^6.0.3\n        \n            @angular/core : ^6.0.3\n        \n            @angular/flex-layout : ^6.0.0-beta.15\n        \n            @angular/forms : ^6.0.3\n        \n            @angular/http : ^6.0.3\n        \n            @angular/material : ^6.2.1\n        \n            @angular/platform-browser : ^6.0.3\n        \n            @angular/platform-browser-dynamic : ^6.0.3\n        \n            @angular/router : ^6.0.3\n        \n            core-js : ^2.5.4\n        \n            font-awesome : ^4.7.0\n        \n            hammerjs : ^2.0.8\n        \n            rxjs : ^6.0.0\n        \n            zone.js : ^0.8.26\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            KeyboardAnimationState   (projects/.../keyboard-animation-state.enum.ts)\n                        \n                        \n                            KeyboardAnimationTransition   (projects/.../keyboard-animation-transition.enum.ts)\n                        \n                        \n                            KeyboardKey   (projects/.../keyboard-key.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/keyboard/src/lib/enums/keyboard-animation-state.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        KeyboardAnimationState\n                    \n                \n                        \n                            \n                                 Void\n                            \n                        \n                        \n                            \n                                Value: void\n                            \n                        \n                        \n                            \n                                 Visible\n                            \n                        \n                        \n                            \n                                Value: visible\n                            \n                        \n                        \n                            \n                                 Hidden\n                            \n                        \n                        \n                            \n                                Value: hidden\n                            \n                        \n            \n        \n\n    projects/keyboard/src/lib/enums/keyboard-animation-transition.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        KeyboardAnimationTransition\n                    \n                \n                        \n                            \n                                 Hide\n                            \n                        \n                        \n                            \n                                Value: visible => hidden\n                            \n                        \n                        \n                            \n                                 Show\n                            \n                        \n                        \n                            \n                                Value: void => visible\n                            \n                        \n            \n        \n\n    projects/keyboard/src/lib/enums/keyboard-key.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        KeyboardKey\n                    \n                \n                        \n                            \n                                 Alt\n                            \n                        \n                        \n                            \n                                Value: Alt\n                            \n                        \n                        \n                            \n                                 AltGraph\n                            \n                        \n                        \n                            \n                                Value: AltGraph\n                            \n                        \n                        \n                            \n                                 AltLk\n                            \n                        \n                        \n                            \n                                Value: AltLk\n                            \n                        \n                        \n                            \n                                 CapsLock\n                            \n                        \n                        \n                            \n                                Value: CapsLock\n                            \n                        \n                        \n                            \n                                 Enter\n                            \n                        \n                        \n                            \n                                Value: Enter\n                            \n                        \n                        \n                            \n                                 Shift\n                            \n                        \n                        \n                            \n                                Value: Shift\n                            \n                        \n                        \n                            \n                                 Space\n                            \n                        \n                        \n                            \n                                Value: Space\n                            \n                        \n                        \n                            \n                                 Tab\n                            \n                        \n                        \n                            \n                                Value: Tab\n                            \n                        \n                        \n                            \n                                 Backspace\n                            \n                        \n                        \n                            \n                                Value: Backspace\n                            \n                        \n                        \n                            \n                                 ArrowRight\n                            \n                        \n                        \n                            \n                                Value: ArrowRight\n                            \n                        \n                        \n                            \n                                 ArrowLeft\n                            \n                        \n                        \n                            \n                                Value: ArrowLeft\n                            \n                        \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            isSpacer   (projects/.../keyboard-layout.ts)\n                        \n                        \n                            isSpecial   (projects/.../keyboard-layout.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/keyboard/src/lib/keyboard-layout.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            isSpacer\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSpacer(key: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isSpecial\n                            \n                            \n                        \n                    \n                \n                \n                    \nisSpecial(key: undefined)\n                    \n                \n\n\n\n\n                \n                    \n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        key\n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                \n                                        \n                                    \n                            \n                            \n                            \n                    \n                \n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nALS Angular Libraries Demo App\nApplicazione demo per lo sviluppo e il testing delle librerie Angular per ALS\nDevelopment server\nRun ng serve or yarn start for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nBuild Libraries\nRun ng build --prod [name of library project] or yarn lib:[name of library project] to build the library. The build artifacts will be stored in the dist/ directory.\nRunning unit tests for libraries\nTODO\nRunning end-to-end tests for libraries\nTODO\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        KeyboardModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_KeyboardModule\n\n\n\ncluster_KeyboardModule_declarations\n\n\n\ncluster_KeyboardModule_exports\n\n\n\ncluster_KeyboardModule_providers\n\n\n\n\nKeyboardComponent\n\nKeyboardComponent\n\n\n\nKeyboardModule\n\nKeyboardModule\n\nKeyboardModule -->\n\nKeyboardComponent->KeyboardModule\n\n\n\n\n\nKeyboardContainerComponent\n\nKeyboardContainerComponent\n\nKeyboardModule -->\n\nKeyboardContainerComponent->KeyboardModule\n\n\n\n\n\nKeyboardDirective\n\nKeyboardDirective\n\nKeyboardModule -->\n\nKeyboardDirective->KeyboardModule\n\n\n\n\n\nKeyboardKeyComponent\n\nKeyboardKeyComponent\n\nKeyboardModule -->\n\nKeyboardKeyComponent->KeyboardModule\n\n\n\n\n\nKeyboardDirective \n\nKeyboardDirective \n\nKeyboardDirective  -->\n\nKeyboardModule->KeyboardDirective \n\n\n\n\n\nKeyService\n\nKeyService\n\nKeyboardModule -->\n\nKeyService->KeyboardModule\n\n\n\n\n\nKeyboardService\n\nKeyboardService\n\nKeyboardModule -->\n\nKeyboardService->KeyboardModule\n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        3 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 directive\n                    \n                \n            \n            \n                \n                    \n                        \n                        2 injectables\n                    \n                \n            \n            \n                \n                    \n                        \n                        1 class\n                    \n                \n            \n            \n                \n                    \n                        \n                        3 interfaces\n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            HIDE_ANIMATION   (projects/.../keyboard-container.component.ts)\n                        \n                        \n                            keyboardLayouts   (projects/.../keyboard-layout.ts)\n                        \n                        \n                            SHOW_ANIMATION   (projects/.../keyboard-container.component.ts)\n                        \n                        \n                            SpecialKeys   (projects/.../keyboard-layout.ts)\n                        \n                        \n                            SpecialKeysIcons   (projects/.../keyboard-layout.ts)\n                        \n                        \n                            SpecialKeyTexts   (projects/.../keyboard-layout.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    projects/keyboard/src/lib/components/keyboard-container/keyboard-container.component.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            HIDE_ANIMATION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        HIDE_ANIMATION:     \n\n                    \n                \n                    \n                        \n                            Default value : `${AnimationDurations.EXITING} ${AnimationCurves.ACCELERATION_CURVE}`\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SHOW_ANIMATION\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SHOW_ANIMATION:     \n\n                    \n                \n                    \n                        \n                            Default value : `${AnimationDurations.ENTERING} ${AnimationCurves.DECELERATION_CURVE}`\n                        \n                    \n\n\n            \n        \n\n    projects/keyboard/src/lib/keyboard-layout.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            keyboardLayouts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        keyboardLayouts:     KeyboardLayouts\n\n                    \n                \n                    \n                        \n                            Type :     KeyboardLayouts\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    'alphanumeric': {\n        keys: [\n            ['1', '2', '3', '4', '5', '6', '7', '8', '9', '0', 'Backspace:1'],\n            ['Spacer:0.5', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', 'Spacer:0.5'],\n            ['CapsLock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', 'Spacer'],\n            ['Shift:1.5', 'z', 'x', 'c', 'v', 'b', 'n', 'm', 'Enter:2.5'],\n            ['ArrowLeft:2', 'Space:7', 'ArrowRight:2']\n        ]\n    },\n    'numeric': {\n        keys: [\n            ['1', '2', '3'],\n            ['4', '5', '6'],\n            ['7', '8', '9'],\n            ['0', 'Enter:2'],\n        ]\n    }\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpecialKeys\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SpecialKeys:     Array\n\n                    \n                \n                    \n                        \n                            Type :     Array\n\n                        \n                    \n                    \n                        \n                            Default value : [\n    'Backspace',\n    'ArrowLeft',\n    'ArrowRight',\n    'Space',\n    'Spacer',\n    'Shift',\n    'Enter',\n    'CapsLock'\n]\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpecialKeysIcons\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SpecialKeysIcons:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    Backspace: 'fa fa-long-arrow-alt-left',\n    ArrowRight: 'fa fa-caret-right',\n    ArrowLeft: 'fa fa-caret-left',\n    Shift: 'fa fa-angle-up',\n    Lock: 'fa fa-lock',\n    Unlock: 'fa fa-unlock-alt'\n}\n                        \n                    \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            SpecialKeyTexts\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        SpecialKeyTexts:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n    Enter: 'Enter'\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
